{
  "name": "MCP Client",
  "nodes": [
    {
      "parameters": {
        "content": "## Companies Nodes",
        "height": 260,
        "width": 960,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        5560,
        620
      ],
      "typeVersion": 1,
      "id": "d8526e60-4cc2-464c-8935-b57ea1919dd4",
      "name": "Sticky Note2",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Deals Nodes **(WIP)**",
        "height": 260,
        "width": 960,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6540,
        620
      ],
      "typeVersion": 1,
      "id": "de52be8d-1bfb-44c7-8174-03bbfc04096c",
      "name": "Sticky Note3",
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "Update an existing HubSpot company by providing its unique `companyId`. All fields such as `name`, `domain`, and `phone` are optional.",
        "method": "POST",
        "url": "=http://35.170.240.97/api/v1/hubspot/companies/{{ $fromAI('companyId', 'Enter the unique ID of the company to update. This field is required.', 'string') }}",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2' }}\"\n}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "={{ $fromAI('name', `Enter the updated name of the company. This field is optional.`, 'string') }}"
            },
            {
              "name": "domain",
              "value": "={{ $fromAI('domain', `Enter the updated domain of the company. This field is optional but must be a valid URL.`, 'string') }}"
            },
            {
              "name": "phone",
              "value": "={{ $fromAI('phone', `Enter the updated phone number of the company. This field is optional but must be a valid phone number.`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        7160,
        700
      ],
      "id": "589750e1-198b-4742-b8d5-5cdddaa08d10",
      "name": "Update a HubSpot Company1",
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "Permanently delete an existing HubSpot company by providing its unique `companyId`. This action cannot be undone.",
        "method": "DELETE",
        "url": "=http://35.170.240.97/api/v1/hubspot/companies/{{ $fromAI('companyId', 'Enter the unique ID of the company to delete. This field is required.', 'string') }}",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2' }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        7340,
        700
      ],
      "id": "a1abd161-c9b6-4abd-a1ec-2b6d399b883c",
      "name": "Delete HubSpot Company1",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Stages Nodes",
        "height": 260,
        "width": 420,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7960,
        620
      ],
      "typeVersion": 1,
      "id": "b9c4c018-e94d-4234-88c0-cbd89aba9de6",
      "name": "Sticky Note4",
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "=Retrieves a list of HubSpot deals using optional filters.\n\n- **Optional filters**: `limit`, array of `contactIds`, `name`, `stage`, `contactName`\n\nFilter Behavior:\n\n- If `name` is provided:  \n  1. Search for deals that match the given name.  \n  2. If no matching deal is found, the filter will be ignored.\n\n- If `contactIds` are provided:  \n  1. Search for deals associated with the specified contact IDs.  \n  2. If no matching deal is found, the filter will be ignored.\n\n- If `contactName` is provided:  \n  1. Search for contacts matching the provided name.  \n  2. Retrieve deals associated with those contacts.  \n  3. If no matching deals are found, the filter will be ignored.",
        "url": "http://35.170.240.97/api/v1/hubspot/deals",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "={{ $fromAI('name', `Enter the company name to filter the results. This field is optional.`, 'string') }}"
            },
            {
              "name": "contactIds",
              "value": "={{ $fromAI('contactIds', `Enter an array of contactIds to filter the results. This field is optional and should be an array of valid contact ID strings.`, 'string') }}"
            },
            {
              "name": "limit",
              "value": "={{ $fromAI('limit', `Specify the maximum number of companies to retrieve. This field is optional.`, 'number') }}"
            },
            {
              "name": "stage",
              "value": "={{ $fromAI('stage', `Provide the stage to filter the results. This field is optional.`, 'string') }}"
            }
          ]
        },
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2' }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        6620,
        700
      ],
      "id": "1812bce6-2feb-4f61-8548-df04191f265c",
      "name": "Fetch HubSpot Deals",
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "toolDescription": "=Creates a new deal in your HubSpot account by providing the required details.\n\n- **Required fields**: `amount`, array of `contactIds`  \n- **Optional fields**: `stage`, `name`\n\nIf a `name` is not provided, a deal name will be automatically generated based on the context and associated contact(s).\n\nThe deal will be associated with the specified contacts. Ensure that all provided information is accurate to maintain CRM data integrity.\n\nIf a contact's name is provided instead of a `contactId`:\n1. Search for the contact using the provided name.\n2. If a match is found, retrieve the associated `contactId`.\n\nAll `contactIds` must be passed as an array of strings, even if only one contact is specified.\n\nIf `stage` is not provided, the deal will be created without an assigned stage.\n\n**Before submitting, display the populated fields to the user and validate all values for correctness.**",
        "method": "POST",
        "url": "http://35.170.240.97/api/v1/hubspot/deals",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2' }}\"\n}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "={{ $fromAI('name', `This field is optional.`, 'string') }}"
            },
            {
              "name": "amount",
              "value": "={{ $fromAI('amount', `This field is required and must be a number with a minimum value of 1.`, 'number') }}"
            },
            {
              "name": "stage",
              "value": "={{ $fromAI('stage', `This field is optional.`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        6980,
        700
      ],
      "id": "c377013c-b666-49ca-9734-348d54c44552",
      "name": "Create a HubSpot Deal",
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "toolDescription": "=Fetches detailed information about a specific HubSpot deal using its unique `dealId`, `name`, or contextual clues.\n\nIf `dealId` is not provided, but `name` or other contextual information is available:\n1. Search for a matching deal using the provided details.\n2. If a match is found, retrieve the associated `dealId` and use it to fetch the deal's full details.\n  3. If no match is found, return an error indicating that the deal could not be located.",
        "url": "=http://35.170.240.97/api/v1/hubspot/deals/{{ $fromAI('dealId', 'This field is required. Use only the dealId, which should be the unique identifier of the deal.',  'string') }}",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2' }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        6800,
        700
      ],
      "id": "5c3b363c-5bda-4239-83ab-759ae4abae34",
      "name": "Fetch HubSpot Deal by dealId",
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "path": "1ca57807-5520-4c8e-95d1-36f08dabef07"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 1,
      "position": [
        6360,
        -260
      ],
      "id": "a274187b-22eb-49e8-847b-93ea982d2d17",
      "name": "MCP Server Trigger",
      "webhookId": "1ca57807-5520-4c8e-95d1-36f08dabef07"
    },
    {
      "parameters": {
        "content": "## Contacts Nodes",
        "height": 260,
        "width": 960
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4580,
        620
      ],
      "typeVersion": 1,
      "id": "9497be15-adee-46fc-8404-e2b4d05f5da6",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "toolDescription": "### 📇 **Tool Name:** `get-contacts`\n\n---\n\n### 🛠️ **Instructions**\n\nCall this tool to **retrieve contacts from HubSpot CRM**, either as a full list or filtered by specific fields.\n\n- All fields are optional and used for filtering.  \n- If no filters are provided, return a paginated list of all contacts (subject to default or specified `limit`).  \n- On the filter payload, **remove all empty values**.  \n- Ensure contacts are **deduplicated** and **clearly formatted** before displaying them to the user.\n\n---\n\n### 📝 **Description**\n\nRetrieves a list of contacts from your **HubSpot CRM**, optionally filtered by first name, last name, phone number, or email address.\n\n---\n\n### 🔍 **Optional Fields**\n\n- `limit` — Maximum number of contacts to retrieve (`number`)  \n- `firstname` — Filter by first name (partial match, `string`)  \n- `lastname` — Filter by last name (partial match, `string`)  \n- `phone` — Filter by phone number (must be valid format, `string`)  \n- `email` — Filter by email address (must be valid format, `string`)\n\n---\n\n### ⚙️ **Behavior Notes**\n\n- Filters use **AND** logic — results must match **all** specified conditions.  \n- If no filters are set, return all contacts using pagination (`limit` applies).  \n- This tool is typically used to:\n  - 🔍 Search for a specific contact  \n  - ✅ Validate if a contact exists before update or delete  \n  - 📋 Display contacts for user selection  \n- If `phone` or `email` is provided, make sure to **URL-encode** the values before sending.\n\n---\n\n### 📦 **Example Payload**\n\n```json\n{\n  \"limit\": 10,\n  \"firstname\": \"John\",\n  \"lastname\": \"Doe\",\n  \"phone\": \"+12125554321\",\n  \"email\": \"john.doe@example.com\"\n}",
        "url": "http://35.170.240.97/api/v1/hubspot/contacts",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "firstname",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', `Filter by first name. Performs a partial (like) match. Optional.`, 'string') }}"
            },
            {
              "name": "=lastname",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `Filter by last name. Performs a partial (like) match. Optional.`, 'string') }}"
            },
            {
              "name": "email",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Value', `Filter by email address. Must be a valid email format. Optional.`, 'string') }}"
            },
            {
              "name": "phone",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters3_Value', `Filter by phone number. Must be a valid phone format (e.g., +12125551234). Optional.`, 'string') }}"
            },
            {
              "name": "limit",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters4_Value', `Maximum number of contacts to retrieve. Optional. Must be a number.`, 'string') }}"
            }
          ]
        },
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2' }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        4660,
        700
      ],
      "id": "fdcb828a-45d6-437b-9d26-ecb6540428a9",
      "name": "Get Contacts",
      "retryOnFail": false,
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "toolDescription": "### 📇 **Tool Name:** `get-contact`\n\n---\n\n### 🛠️ **Instructions**\n\nCall this tool to **retrieve a specific contact from HubSpot CRM**.\n\n- Use `contactId` internally — do **not** include it in the request payload.  \n- If `contactId` is not available, resolve the contact using `firstname`, `lastname`, `email`, or `phone` via the `get-contacts` tool.  \n  - If multiple matches are found, prompt the user to select one and use the chosen contact’s `contactId`.  \n- Do **not** include any fields in the request body — this tool does not require a JSON payload.  \n- Once retrieved, display the contact’s details clearly.\n\n---\n\n### 📝 **Description**\n\nFetches a single contact from your **HubSpot CRM**, using either a unique identifier (`contactId`) or identifying fields such as name, email, or phone.\n\n---\n\n### 🔐 **Required Field**\n\n- `contactId` — Unique identifier of the contact to retrieve (`string`)\n\n---\n\n### 🔍 **Optional Lookup Fields**\n\nUsed only if `contactId` is not provided:\n\n- `firstname` — Partial match (`string`)  \n- `lastname` — Partial match (`string`)  \n- `email` — Valid email format (`string`)  \n- `phone` — Valid international phone format (`string`)\n\n---\n\n### ⚙️ **Behavior Notes**\n\n- Prefer `contactId` for direct lookup when available.  \n- If using identifying fields and multiple matches are found, prompt the user to select the correct contact.  \n- Return a clear error message if no match is found.  \n- Handle possible API errors:\n  - ❌ `400 Bad Request` — Invalid or missing input  \n  - 🚫 `404 Not Found` — No contact found with the provided information  \n  - 🛑 `500 Internal Server Error` — Unexpected issue with the HubSpot API\n\n---\n\n### 📦 **Example Payload**\n\n_No JSON body required. All inputs are resolved internally and passed via query parameters._",
        "url": "=http://35.170.240.97/api/v1/hubspot/contacts/{{ $fromAI('contactId', 'Required. Provide the contactId of the selected contact. This is the unique identifier used to get the contact.', 'string') }}",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2'\n }}\"\n}",
        "options": {},
        "optimizeResponse": true
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        4840,
        700
      ],
      "id": "cbeedfac-1ada-4eb0-a65b-41e88519b870",
      "name": "Get Contact",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "toolDescription": "=### ➕ **Tool Name:** `create-contact`\n\n---\n\n### 🛠️ **Instructions**\n\nCall this tool to **create a new contact in HubSpot CRM**.\n\n- Validate all required and optional fields.  \n- Use the `get-contacts` tool to search by `email`, `firstname`, and `lastname` to check for duplicates.  \n- If a contact with the same email exists, offer the user options:\n  - ❌ Skip creation  \n  - ✏️ Update the existing contact (via `update-contact`)  \n  - ➕ Proceed with creation anyway  \n- Show a **preview of the payload** before submission.  \n- Request **explicit confirmation** (e.g., \"create\", \"yes\", \"confirm\") before proceeding.\n\n---\n\n### 📝 **Description**\n\nCreates a new contact in your **HubSpot CRM** using the provided details.\n\n---\n\n### 🔐 **Required Fields**\n\n- `firstname` — First name (`string`)  \n- `lastname` — Last name (`string`)  \n- `email` — Email address (valid format)\n\n---\n\n### 🧩 **Optional Fields**\n\n- `phone` — Phone number (valid international format, e.g., `+12125551234`)  \n- `companyId` — ID of the associated company (`string`)\n\n---\n\n### ⚙️ **Behavior Notes**\n\n- If `companyId` is provided, associate the contact with that company.  \n- If only a **company name** is given:\n  1. Search for the company.\n  2. If found, use its `companyId`.\n  3. If not found, ask:  \n     > *\"Company not found. Would you like to create it?\"*  \n     - If confirmed, create the company and use the new `companyId`.\n\n- Only provided fields will be included.  \n- Validate all inputs.  \n- Confirm with the user before executing the request.\n\n---\n\n### ❗ **Possible API Errors**\n\n- `400 Bad Request` — Invalid or missing input  \n- `500 Internal Server Error` — HubSpot service failure\n\n---\n\n### 📦 **Example Payload**\n\n```json\n{\n  \"firstname\": \"John\",\n  \"lastname\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"phone\": \"+12125551234\",\n  \"companyId\": \"123456789\"\n}",
        "method": "POST",
        "url": "http://35.170.240.97/api/v1/hubspot/contacts",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2'\n }}\"\n}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "firstname",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', `Provide the contact's first name. This is required.`, 'string') }}"
            },
            {
              "name": "lastname",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `Provide the contact's last name. This is required.`, 'string') }}"
            },
            {
              "name": "email",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Value', `Provide a valid email address for the contact. This is required and must be unique in HubSpot.`, 'string') }}"
            },
            {
              "name": "=phone",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters3_Value', `Provide the contact's phone number in international format (e.g., +12125551234). This is optional.`, 'string') }}"
            },
            {
              "name": "companyId",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters4_Value', `Provide the associated company ID for the contact. If only the company name is available, perform a lookup. This is optional.`, 'string') }}"
            }
          ]
        },
        "options": {},
        "optimizeResponse": true
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        5020,
        700
      ],
      "id": "dc9e7c29-ab54-4a77-82d0-450a74f830fe",
      "name": "Create Contact",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "toolDescription": "=### ✏️ **Tool Name:** `update-contact`\n\n---\n\n### 🛠️ **Instructions**\n\nCall this tool to **update an existing contact in HubSpot CRM**.\n\n- If `contactId` is not provided, resolve it using the `get-contacts` tool via the contact’s name or email.  \n- `contactId` is used internally and should **not** be included in the request payload.  \n- Validate all fields and build the update payload.  \n- If **no changes** were made, do **not** proceed.  \n- If updating the `email`:\n  - Check for duplicates using `get-contacts`.\n  - If another contact uses the same email, prompt the user to:\n    - ❌ Skip the update  \n    - ✏️ Update the existing contact (via `update-contact`)  \n- If no matching contact is found, offer to ➕ **create a new contact** (via `create-contact`).  \n- If a `companyId` is provided but the contact is **already associated** with it, notify the user and **omit `companyId` from the payload**.  \n- Show a **preview** before submission.  \n- Request **explicit confirmation** (e.g., “confirm”, “yes”, “update”) before proceeding.\n\n---\n\n### 📝 **Description**\n\nUpdates an existing contact in your **HubSpot CRM** using the provided fields.\n\n---\n\n### 🔐 **Required Field**\n\n- `contactId` — Internal ID of the contact *(used internally only)*\n\n---\n\n### 🧩 **Optional Fields**\n\n- `firstname` — First name (`string`)  \n- `lastname` — Last name (`string`)  \n- `email` — Email address (valid format)  \n- `phone` — Phone number (valid international format, e.g., `+12125551234`)  \n- `companyId` — HubSpot company ID to associate (`string`)\n\n---\n\n### ⚙️ **Behavior Notes**\n\n- If a **company name** is provided instead of `companyId`:\n  1. Search for the company by name.\n  2. If not found, ask:  \n     > *\"The specified company was not found. Would you like to create it?\"*  \n     - If confirmed, create the company and use its ID.\n\n- If the contact is already associated with the given `companyId`, exclude `companyId` from the payload.  \n- Only the provided fields will be updated — others remain unchanged.  \n- Validate all inputs and await user confirmation before execution.\n\n---\n\n### ❗ **Possible API Errors**\n\n- `400 Bad Request` — Invalid or missing input  \n- `404 Not Found` — Contact not found with the provided `contactId`  \n- `500 Internal Server Error` — Unexpected error from HubSpot\n\n---\n\n### 📦 **Example Payload**\n\n```json\n{\n  \"firstname\": \"Jane\",\n  \"lastname\": \"Smith\",\n  \"email\": \"jane.smith@example.com\",\n  \"phone\": \"+12125554321\",\n  \"companyId\": \"987654321\"\n}",
        "method": "PUT",
        "url": "=http://35.170.240.97/api/v1/hubspot/contacts/{{ $fromAI('contactId', 'Provide the unique HubSpot contact ID to update. If not available, search using contact name.', 'string') }}",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2'\n }}\"\n}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "firstname",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', `New first name for the contact. Optional.`, 'string') }}"
            },
            {
              "name": "lastname",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `New last name for the contact. Optional.`, 'string') }}"
            },
            {
              "name": "email",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Value', `New email address for the contact. Must be valid and unique. Optional.`, 'string') }}"
            },
            {
              "name": "phone",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters3_Value', `Updated phone number in international format (e.g., +12125554321). Optional.`, 'string') }}"
            },
            {
              "name": "companyId",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters4_Value', `Provide the associated company ID to link the contact. If a company name is given, perform a lookup. Optional.`, 'string') }}"
            }
          ]
        },
        "options": {},
        "optimizeResponse": true,
        "dataField": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Field_Containing_Data', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        5200,
        700
      ],
      "id": "7e78e8c1-e6c6-45c5-bdf8-247496850bbb",
      "name": "Update Contact",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "toolDescription": "=### 🗑️ **Tool Name:** `delete-contact`\n\n---\n\n### 🛠️ **Instructions**\n\nCall this tool to **permanently delete a contact from HubSpot CRM**.\n\n- Use `contactId` internally — do **not** include it in the request payload.  \n- If `contactId` is not available, use the `get-contacts` tool to find the contact by `firstname`, `lastname`, `email`, or `phone`.  \n  - If multiple matches are found, prompt the user to select one and use that contact’s `contactId`.  \n- Always show a **contact preview** before proceeding.  \n- Request **explicit confirmation** (e.g., “delete”, “confirm”, “yes”) before continuing.  \n- Clearly warn the user that this action is **permanent** and **cannot be undone**.\n\n---\n\n### 📝 **Description**\n\nPermanently deletes a contact from your **HubSpot CRM** account.  \nThis action is irreversible and requires a valid `contactId` (resolved internally).\n\n---\n\n### 🔐 **Required Field**\n\n- `contactId` — Unique identifier of the contact to delete (`string`)\n\n---\n\n### 🔍 **Optional Lookup Fields**\n\nIf `contactId` is not provided:\n\n- `firstname` — Partial match (`string`)  \n- `lastname` — Partial match (`string`)  \n- `email` — Valid email address (`string`)  \n- `phone` — Valid international phone number (`string`)\n\n---\n\n### ⚙️ **Behavior Notes**\n\n- Use **AND logic** when filtering contacts via optional fields.\n- If multiple results are found, allow the user to select the correct contact.\n- Do **not** proceed with deletion until:\n  1. The contact is previewed.\n  2. The user explicitly confirms the deletion.\n\n---\n\n### ❗ **Possible API Responses**\n\n- `400 Bad Request` — Invalid or missing `contactId`  \n- `404 Not Found` — Contact does not exist  \n- `500 Internal Server Error` — Failed to delete the contact\n\n---\n\n### 📦 **Example Payload**\n\n_No JSON payload required. The `contactId` is resolved and handled internally._",
        "method": "DELETE",
        "url": "=http://35.170.240.97/api/v1/hubspot/contacts/{{ $fromAI('contactId', 'Required. Provide the contactId of the selected contact. This is the unique identifier used to delete the contact.', 'string') }}",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2' }}\"\n}",
        "options": {},
        "optimizeResponse": true
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        5380,
        700
      ],
      "id": "954a1821-fd9c-4fa5-ad7a-a8c48982b4a3",
      "name": "Delete Contact",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "toolDescription": "=### 🏢 **Tool Name:** `get-companies`\n\n---\n\n### 🛠️ **Instructions**\n\nCall this tool to **retrieve companies from HubSpot CRM**, either as a full list or filtered by specific fields.\n\n- All fields are optional and used for filtering.  \n- If no filters are provided, return a **paginated list** of all companies (based on default or specified `limit`).  \n- On the filter payload, **remove all empty values**.  \n- Ensure the results are **deduplicated** and **clearly formatted** before presenting them to the user.\n\n---\n\n### 📝 **Description**\n\nRetrieves a list of companies from your **HubSpot CRM**, optionally filtered by name, domain, or phone number.\n\n---\n\n### 🔍 **Optional Fields**\n\n- `limit` — Maximum number of companies to retrieve (`number`)  \n- `name` — Filter by company name (partial match, `string`)  \n- `domain` — Filter by company domain (e.g., `example.com`, `string`)  \n- `phone` — Filter by phone number (valid international format, e.g., `+14155552671`, `string`)\n\n---\n\n### ⚙️ **Behavior Notes**\n\n- Filters use **AND logic** — all conditions must be met.  \n- If no filters are provided, return all companies using pagination (with a default or user-defined `limit`).  \n- This tool is typically used to:\n  - 🔍 Search for a specific company  \n  - ✅ Verify whether a company exists before associating it with a contact or deal  \n  - 📋 Display a list of companies for user selection  \n- If `domain` or `phone` is provided, make sure to **URL-encode** the values before sending.\n\n---\n\n### 📦 **Example Payload**\n\n```json\n{\n  \"limit\": 10,\n  \"name\": \"Acme Corp\",\n  \"domain\": \"acmecorp.com\",\n  \"phone\": \"+14155552671\"\n}",
        "url": "http://35.170.240.97/api/v1/hubspot/companies",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', `Filter by company name. Partial match. Optional.`, 'string') }}"
            },
            {
              "name": "domain",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `Filter by company domain (e.g., example.com). Optional.`, 'string') }}"
            },
            {
              "name": "phone",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Value', `Filter by company phone number. Must be a valid international format (e.g., +14155552671). Optional.`, 'string') }}"
            },
            {
              "name": "limit",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters3_Value', `Maximum number of companies to retrieve. Optional.`, 'string') }}"
            }
          ]
        },
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2' }}\"\n}",
        "options": {},
        "optimizeResponse": true
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        5640,
        700
      ],
      "id": "1270d7b4-390f-441a-b357-3a1b4530a561",
      "name": "Get Companies",
      "executeOnce": false,
      "retryOnFail": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "toolDescription": "=### 🏢 **Tool Name:** `get-company`\n\n---\n\n### 🛠️ **Instructions**\n\nCall this tool to **retrieve a specific company from HubSpot CRM**.\n\n- Use `companyId` internally — do **not** include it in the request payload.  \n- If `companyId` is not available, use the `get-companies` tool to find the company by `name`, `domain`, or `phone`.  \n  - If multiple matches are found, prompt the user to select one and use the chosen company’s `companyId`.  \n- This tool does **not** require a request body — all inputs are handled internally.  \n- Once retrieved, display the company details clearly.\n\n---\n\n### 📝 **Description**\n\nFetches a single company from your **HubSpot CRM** using a unique `companyId` or lookup fields like `name`, `domain`, or `phone`.\n\n---\n\n### 🔐 **Required Field**\n\n- `companyId` — Unique identifier of the company (`string`)  \n  *(used internally — not sent in the payload)*\n\n---\n\n### 🔍 **Optional Lookup Fields**\n\nUsed only if `companyId` is not provided:\n\n- `name` — Partial match (`string`)  \n- `domain` — Fully qualified domain name (`string`)  \n- `phone` — Valid international format (`string`, e.g., `+14155552671`)\n\n---\n\n### ⚙️ **Behavior Notes**\n\n- Prefer `companyId` for direct lookup.  \n- If using lookup fields:\n  - Use **AND logic** for filtering.\n  - If multiple companies are found, prompt the user to choose one.\n  - If no match is found, return an error.  \n- Do not proceed unless a valid `companyId` is resolved.\n\n---\n\n### ❗ **Possible API Errors**\n\n- `400 Bad Request` — Invalid or missing input  \n- `404 Not Found` — No company found matching the criteria  \n- `500 Internal Server Error` — Unexpected issue with the HubSpot API\n\n---\n\n### 📦 **Example Payload**\n\n_No JSON payload required. All inputs are resolved internally and passed via query parameters._",
        "url": "=http://35.170.240.97/api/v1/hubspot/companies/{{ $fromAI('companyId', 'This field is required. Use only the companyId, which should be the unique identifier of the comopany', 'string') }}",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2' }}\"\n}",
        "options": {},
        "optimizeResponse": true
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        5820,
        700
      ],
      "id": "bd267523-4809-4507-9ce9-507734e668f1",
      "name": "Get Company",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "toolDescription": "=### 🏢 **Tool Name:** `create-company`\n\n---\n\n### 🛠️ **Instructions**\n\nCall this tool to **create a new company record in HubSpot CRM**.\n\n- Validate all required and optional fields.  \n- Use the `get-company` tool to check for an existing match by `name` or `domain`.  \n- If a match is found, present options:\n  - ❌ Skip creation  \n  - ✏️ Update the existing company (via `update-company`)  \n  - ➕ Proceed with creating a new one anyway  \n- Show a **preview of the payload** before submission.  \n- Request **explicit confirmation** (e.g., “create”, “confirm”, “yes”) before proceeding.\n\n---\n\n### 📝 **Description**\n\nCreates a new company in your **HubSpot CRM** account using the provided details.\n\n---\n\n### 🔐 **Required Field**\n\n- `name` — Company name (`string`)\n\n---\n\n### 🧩 **Optional Fields**\n\n- `domain` — Website domain (e.g., `example.com`, `string`)  \n- `phone` — Phone number (valid international format, e.g., `+12125551234`)  \n- `email` — General contact email (`string`, valid format)\n\n---\n\n### ⚙️ **Behavior Notes**\n\n- If a company with the same `name` or `domain` already exists:\n  - Prompt the user to skip, update, or proceed with creation.\n- Only the provided fields will be included; all others remain empty.\n- Validate inputs before execution.\n- Always wait for user confirmation before sending the request.\n\n---\n\n### ❗ **Possible API Errors**\n\n- `400 Bad Request` — Missing or invalid input  \n- `500 Internal Server Error` — HubSpot API failure\n\n---\n\n### 📦 **Example Payload**\n\n```json\n{\n  \"name\": \"Acme Corporation\",\n  \"domain\": \"acme.com\",\n  \"phone\": \"+12125551234\",\n  \"email\": \"info@acme.com\"\n}",
        "method": "POST",
        "url": "http://35.170.240.97/api/v1/hubspot/companies",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2' }}\"\n}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', `The name of the company (required).`, 'string') }}"
            },
            {
              "name": "domain",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `The company’s website domain (e.g., example.com). Optional.`, 'string') }}"
            },
            {
              "name": "phone",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Value', `The company’s main phone number (e.g., +12125551234). Optional.`, 'string') }}"
            }
          ]
        },
        "options": {},
        "optimizeResponse": true
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        6000,
        700
      ],
      "id": "110c096b-e44b-4f23-810b-595fb8bd6ba2",
      "name": "Create Company",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "toolDescription": "=### ✏️ **Tool Name:** `update-company`\n\n---\n\n### 🛠️ **Instructions**\n\nCall this tool to **update an existing company in HubSpot CRM**.\n\n- If `companyId` is not provided, use the `get-companies` tool to resolve it using the company name.  \n- `companyId` is **required internally**, but should **not** be included in the request payload.  \n- Validate fields and construct the update payload.  \n- If **no changes** were made, do **not** proceed.  \n- If updating `domain` or `email`:\n  - Use `get-companies` to check for duplicates.\n  - If found, offer options:\n    - ❌ Skip the update  \n    - ✏️ Update the existing company (via `update-company`)  \n- If no company is found, offer to ➕ **create a new one** (via `create-company`).  \n- Show a **preview** of the payload before submission.  \n- Wait for user confirmation (e.g., “accept”, “yes”, “proceed”).\n\n---\n\n### 📝 **Description**\n\nUpdates an existing company in your **HubSpot CRM** account using the provided fields.\n\n---\n\n### 🔐 **Required Field**\n\n- `companyId` — Internal ID of the company *(not sent in the payload)*\n\n---\n\n### 🧩 **Optional Fields**\n\n- `name` — Company name (`string`)  \n- `domain` — Website domain (e.g., `example.com`, `string`)  \n- `phone` — Phone number (valid international format, e.g., `+12125554321`)  \n- `email` — Company email address (valid format)\n\n---\n\n### ⚙️ **Behavior Notes**\n\n- If a **company name** is provided instead of `companyId`:\n  1. Search for the company.\n  2. If not found, ask:  \n     > *\"Company not found. Would you like to create a new one?\"*  \n     - If yes, create the company and use the new `companyId`.\n\n- Only provided fields are updated; others remain unchanged.  \n- Validate all inputs.  \n- Always confirm with the user before proceeding.\n\n---\n\n### ❗ **Possible API Errors**\n\n- `400 Bad Request` — Invalid or missing input  \n- `404 Not Found` — Company not found with the given `companyId`  \n- `500 Internal Server Error` — Unexpected failure from the HubSpot API\n\n---\n\n### 📦 **Example Payload**\n\n```json\n{\n  \"name\": \"Acme Corporation\",\n  \"domain\": \"acme.co\",\n  \"phone\": \"+14155552671\",\n  \"email\": \"support@acme.co\"\n}",
        "method": "PUT",
        "url": "=http://35.170.240.97/api/v1/hubspot/companies/{{ $fromAI('companyId', 'Enter the unique Company ID (required but will not be included in the payload).', 'string')",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2' }}\"\n}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "={{ $fromAI('parameters0_Value', `Enter the new company name (optional).`, 'string') }}"
            },
            {
              "name": "domain",
              "value": "={{ $fromAI('parameters1_Value', `Enter the updated company domain (optional, e.g., acme.com).', 'string')`, 'string') }}"
            },
            {
              "name": "phone",
              "value": "={{ $fromAI('parameters2_Value', `Enter the updated phone number (optional, valid international format, e.g., +12125554321).`, 'string') }}"
            }
          ]
        },
        "options": {},
        "optimizeResponse": true
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        6180,
        700
      ],
      "id": "5958e35c-2974-4915-b952-d963302cca11",
      "name": "Update Company",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "toolDescription": "=### **Tool Name:** `delete-company`\n\n---\n\n### **Instructions**\n\nCall this tool to **permanently delete a company from HubSpot CRM**.\n\n- Use `companyId` internally — do **not** include it in the request payload.  \n- If `companyId` is not available, resolve the company using `name`, `domain`, or `phone` via the `get-companies` tool.  \n  - If multiple matches are found, prompt the user to choose one and use the selected company’s `companyId`.  \n- Always show a company preview before proceeding.  \n- Request explicit confirmation (e.g., “delete”, “confirm”, “yes”).  \n- Clearly inform the user this action is **permanent** and cannot be undone.\n\n---\n\n### **Description**\n\nDeletes a company from your **HubSpot CRM** account. The operation is irreversible and requires a valid `companyId`, resolved internally.\n\n---\n\n### **Required Field**\n\n- `companyId` — Unique identifier of the company to delete (string)\n\n---\n\n### **Optional Lookup Fields**\n\nIf `companyId` is not provided:\n\n- `name` — Partial match (string)  \n- `domain` — Company domain (e.g., `example.com`, string)  \n- `phone` — Valid international format (e.g., `+12125551234`, string)\n\n---\n\n### **Behavior Notes**\n\n- Use `get companies` to locate the company based on provided fields using **AND** logic.  \n- If multiple companies are found, let the user select the correct one.  \n- Do not proceed with deletion until the user reviews and confirms the company preview.\n\n---\n\n### **Possible API Responses**\n\n- `400 Bad Request` — Invalid or missing `companyId`  \n- `404 Not Found` — Company not found  \n- `500 Internal Server Error` — Deletion failed\n\n---\n\n### **Example Payload**\n\n_No JSON payload required. The `companyId` is handled internally._",
        "method": "DELETE",
        "url": "=http://35.170.240.97/api/v1/hubspot/companies/{{ $fromAI('companyId', 'Provide the unique identifier of the company to delete. This is required and should be handled internally.', 'string') }}",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2' }}\"\n}",
        "options": {},
        "optimizeResponse": true
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        6360,
        700
      ],
      "id": "d8f28b67-7c57-405a-be72-6209ee0054ee",
      "name": "Delete Company",
      "notesInFlow": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## Pipelines Nodes",
        "height": 260,
        "width": 420,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7520,
        620
      ],
      "typeVersion": 1,
      "id": "f083585f-c927-4a1a-a773-10d6a4436b10",
      "name": "Sticky Note5",
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "### 🛠️ **Tool Name:** `get-pipelines`\n\n---\n\n### 📌 **Instructions**\n\nCall this tool to **retrieve a list of pipelines** from HubSpot CRM, either as a full list or filtered by specific fields.\n\n- All fields are optional and used for filtering.  \n- If no filters are provided, return a **paginated list** of all pipelines (based on default or specified `limit`).  \n- On the filter payload, **remove all empty values**.  \n- Ensure the results are **deduplicated** and **clearly formatted** before presenting them to the user.\n\n---\n\n### 📄 **Description**\n\nRetrieves a list of pipelines from your **HubSpot CRM**, optionally filtered by name.\n\n---\n\n### 🔍 **Optional Fields**\n\n- `limit` — Maximum number of pipelines to retrieve (`number`)  \n- `name` — Filter pipelines by name (partial match, `string`)  \n\n---\n\n### ⚙️ **Behavior Notes**\n\n- Filters use **AND logic** — all specified conditions must be met.  \n- If no filters are provided, return all pipelines using pagination (with a default or user-defined `limit`).  \n- This tool is typically used to:\n  - 🔍 Search for a specific pipeline  \n  - 📋 Display a list of pipelines for user selection  \n- ❗ Do **not** include the list of stages in the output.\n\n---\n\n### 📦 **Example Payload**\n\n```json\n{\n  \"limit\": 10,\n  \"name\": \"Sales Pipeline\"\n}",
        "url": "http://35.170.240.97/api/v1/hubspot/pipelines",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "={{ $fromAI('parameters0_Value', `Filter pipelines by name. Performs a partial match. This field is optional.`, 'string') }}"
            },
            {
              "name": "limit",
              "value": "={{ $fromAI('parameters1_Value', `Maximum number of pipelines to retrieve. This field is optional.`, 'string') }}"
            }
          ]
        },
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2' }}\"\n}",
        "options": {},
        "optimizeResponse": true
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        7600,
        700
      ],
      "id": "f1f9dbc6-075b-44ca-afaa-fbc7c9cc28c1",
      "name": "Get Pipelines",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "toolDescription": "### 🏢 **Tool Name:** `get-pipeline`\n\n---\n\n### 🛠️ **Instructions**\n\nCall this tool to **retrieve a specific pipeline from HubSpot CRM**.\n\n- Use `pipelineId` internally — do **not** include it in the request payload.  \n- If `pipelineId` is not available, use the `get-pipelines` tool to find the pipeline by `name`.  \n  - If multiple matches are found, prompt the user to select one and use the chosen pipeline's `pipelineId`.  \n- This tool does **not** require a request body — all inputs are handled internally.  \n- Once retrieved, display the pipeline details clearly.\n\n---\n\n### 📝 **Description**\n\nFetches a single pipeline from your **HubSpot CRM** account using a unique identifier or by searching with lookup fields such as `name`.\n\n---\n\n### 🔐 **Required Field**\n\n- `pipelineId` — Unique identifier of the pipeline to retrieve (`string`)  \n  *(used internally — not sent in the payload)*\n\n---\n\n### 🔍 **Optional Lookup Fields**\n\nUsed only if `pipelineId` is not provided:\n\n- `name` — Partial match (`string`)  \n\n---\n\n### ⚙️ **Behavior Notes**\n\n- Prefer `pipelineId` for direct lookup.  \n- If using lookup fields:\n  - Apply **AND logic** when filtering.\n  - If multiple pipelines are found, prompt the user to choose one.\n  - If no match is found, return an informative error.\n- Do not proceed unless a valid `pipelineId` is resolved.\n\n---\n\n### ❗ **Possible API Errors**\n\n- `400 Bad Request` — Invalid or missing input  \n- `404 Not Found` — No pipeline found matching the criteria  \n- `500 Internal Server Error` — Unexpected issue with the HubSpot API\n\n---\n\n### 📦 **Example Payload**\n\n_No JSON payload required. All inputs are resolved internally and passed via query parameters._",
        "url": "=http://35.170.240.97/api/v1/hubspot/pipelines/{{ $fromAI('pipelineId', 'Enter the unique ID of the pipeline to fetch details for. This field is required.', 'string') }}",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2' }}\"\n}",
        "options": {},
        "optimizeResponse": true
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        7780,
        700
      ],
      "id": "2ce582a6-7dcf-40d2-aafc-6a9461bf868a",
      "name": "Get Pipeline",
      "retryOnFail": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "toolDescription": "### 📶 **Tool Name:** `get-stage`\n\n---\n\n### 📌 **Instructions**\n\nCall this tool to **retrieve a specific stage** from HubSpot CRM using its unique identifier.\n\n- If `pipelineId` is not provided, resolve it using the `get-pipeline` tool via the pipeline `name`.  \n- If neither is provided, default to `\"default\"` as the `pipelineId`.  \n- `pipelineId` is required internally but should **not** be included in the request payload.  \n- Use `stageId` internally — do **not** include it in the request payload.  \n- If `stageId` is not available, use the `get-stages` tool with `name` and `pipelineId` to resolve it.  \n  - If multiple matches are found, prompt the user to select one and use the selected `stageId`.  \n- This tool does **not** require a request body — all inputs are handled internally.  \n- Once retrieved, display the stage details clearly.\n\n---\n\n### 📝 **Description**\n\nFetches a single **stage** from your **HubSpot CRM** using its unique `stageId`, or by resolving from pipeline and stage name if `stageId` is not available.\n\n---\n\n### 🔐 **Required Field**\n\n- `pipelineId` — Resolved internally from pipeline name or defaulted to `\"default\"`  \n  *(This value must not appear in the request payload.)*\n- `stageId` — Unique identifier of the stage to retrieve (`string`)  \n  *(Used internally — not sent in the payload)*\n\n---\n\n### ⚙️ **Behavior Notes**\n\n- Prefer `stageId` for direct lookup.  \n- If using lookup fields:\n  - Use **AND logic** for filtering.\n  - If multiple matches are found, prompt the user to choose one.\n  - If no matches are found, return a descriptive error.\n- Do **not proceed** unless a valid `stageId` is resolved.\n\n---\n\n### ❗ **Possible API Errors**\n\n- `400 Bad Request` — Invalid or missing input  \n- `404 Not Found` — No stage found matching the criteria  \n- `500 Internal Server Error` — HubSpot API failed to respond\n\n---\n\n### 📦 **Example Payload**\n\n_No JSON payload required. All inputs are resolved internally and passed via query parameters._",
        "url": "=http://35.170.240.97/api/v1/hubspot/pipelines/{{ $fromAI('pipelineId', `Enter the unique ID of the pipeline to fetch details for. This field is required. Default value is 'default'.`, 'string') }}/stages",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "={{ $fromAI('name', `Enter the stage name to filter the results. This field is optional.`, 'string') }}"
            },
            {
              "name": "limit",
              "value": "={{ $fromAI('limit', `Specify the maximum number of stages to retrieve. This field is optional.`, 'number') }}"
            }
          ]
        },
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2' }}\"\n}",
        "options": {},
        "optimizeResponse": true
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        8040,
        700
      ],
      "id": "483e44f1-3181-4d75-98c9-9991c6c07e08",
      "name": "Get Stages",
      "retryOnFail": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "toolDescription": "### 📶 **Tool Name:** `get-stage`\n\n---\n\n### 📌 **Instructions**\n\nCall this tool to **retrieve a specific stage** from HubSpot CRM using its unique identifier.\n\n- If `pipelineId` is not provided, default to `\"default\"`.  \n- `pipelineId` is required internally but should **not** be included in the request payload.  \n- Use `stageId` internally — do **not** include it in the request payload.  \n- If `stageId` is not available, use the `get-stages` tool with `name` and `pipelineId` to resolve it.  \n- This tool does **not** require a request body — all inputs are handled internally.  \n- Once retrieved, display the stage details clearly.\n\n---\n\n### 📝 **Description**\n\nFetches a single **stage** from your **HubSpot CRM** using its unique `stageId`, or by resolving from pipeline and stage name if `stageId` is not available.\n\n---\n\n### 🔐 **Required Field**\n\n- `pipelineId` — Resolved internally from pipeline name or defaulted to `\"default\"`  \n  *(This value must not appear in the request payload.)*  \n- `stageId` — Unique identifier of the stage to retrieve (`string`)  \n  *(Used internally — not sent in the payload)*\n\n---\n\n### ⚙️ **Behavior Notes**\n\n- Prefer `stageId` for direct lookup.  \n- If using lookup fields:\n  - Use **AND logic** for filtering.\n  - If multiple matches are found, prompt the user to choose one.\n  - If no matches are found, return a descriptive error.\n- Do **not proceed** unless a valid `stageId` is resolved.\n\n---\n\n### ❗ **Possible API Errors**\n\n- `400 Bad Request` — Invalid or missing input  \n- `404 Not Found` — No stage found matching the criteria  \n- `500 Internal Server Error` — HubSpot API failed to respond\n\n---\n\n### 📦 **Example Payload**\n\n_No JSON payload required. All inputs are resolved internally and passed via query parameters._",
        "url": "=http://35.170.240.97/api/v1/hubspot/pipelines/{{ $fromAI('pipelineId', `Enter the unique ID of the pipeline to fetch details for. This field is required. Default value is 'default'.`, 'string') }}/stages/{{ $fromAI('stageId', 'This field is required. Use only the stageId, which should be the unique identifier of the stage', 'string') }}",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Authorization\": \"Bearer {{ '9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2' }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        8220,
        700
      ],
      "id": "31ba80b5-9d64-4183-b5dc-72ff2a2895d9",
      "name": "Get Stage"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_error_logs",
          "mode": "list",
          "cachedResultName": "n8n_error_logs"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "sessionId": "={{ $('When chat message received').item.json.sessionId }}",
            "message": "={{ {\n chatInput: $json.chatInput ?? $('Telegram Trigger').item.json.message.text,\n error: $json.error\n} }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "sessionId",
              "displayName": "sessionId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "message",
              "displayName": "message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        5920,
        -220
      ],
      "id": "49147b0e-2f0c-45cb-a8fa-458b3550da37",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "kS35e9jQpjf0T0s4",
          "name": "Postgres account"
        }
      },
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        5580,
        -100
      ],
      "id": "726ffd3d-8b4f-436a-bcf4-c957a3c88157",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "kS35e9jQpjf0T0s4",
          "name": "Postgres account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "sseEndpoint": "=https://gluagents.xyz/mcp/1ca57807-5520-4c8e-95d1-36f08dabef07/sse"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        5760,
        -100
      ],
      "id": "ff1a948c-d2ba-4a75-a9c8-9b8c2288e0d2",
      "name": "MCP Chat Client",
      "disabled": true
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "### 🤖 **You are a friendly and professional CRM Assistant powered by an MCP Server and AI Agent**\n\nYou manage customer relationship records in **HubSpot CRM** by interpreting user intent and interacting with the following core entities:\n\n- **📇 Contacts** — *(leads, prospects, customers, individuals, users, assets)*  \n  People with attributes such as name, email, phone number, and associated companies.\n\n- **🏢 Companies** — *(organizations, businesses, agencies, firms, entities, vendors, clients)*  \n  Entities linked to contacts, deals, or tickets.\n\n- **💼 Deals** — *(sales, opportunities, transactions, offers, negotiations, quotes, contracts)*  \n  Sales opportunities associated with contacts or companies.\n\n- **📶 Stages** — *(steps, milestones, phases, checkpoints)*  \n  Defined progress points within a pipeline.\n\n- **📋 Pipelines** — *(workflows, funnels, processes, sales tracks)*  \n  Structured workflows outlining the progression of deals or tickets through stages.\n\n- **🎫 Tickets** — *(support cases, inquiries, service requests, issues, helpdesk items)*  \n  Support-related entries tied to contacts, companies, or deals.\n\n---\n\n### ⚙️ **Supported Operations**\n\nYou support the following actions across all entities:\n\n- **🔍 Get** — *(retrieve, fetch, find, list, search, view)*  \n- **➕ Create** — *(add, register, open, generate, start)*  \n- **✏️ Update** — *(edit, modify, change, rename, replace)*  \n- **🗑️ Delete** — *(remove, erase, drop, archive)*  \n- **🔗 Associate** — *(link, connect, relate, join, assign, attach)*\n\n> 🎯 Your goal is to match each user message to the appropriate **operation** and **entity**.  \n> If the request is unclear or outside CRM scope, respond politely and ask for clarification.\n\n---\n\n### 🧾 **Data Schema**\n\n#### 📇 Contacts\n\n**Contact Name:** `{firstname} {lastname}`  \n- **Contact ID:** `{contactId}`  \n- **Email Address:** `{email}`  \n- **Phone Number:** `{phone}` — *omit if not provided*  \n- **Company:**  \n  - Use the format defined in **🏢 Companies**\n\n---\n\n#### 🏢 Companies\n\n**Company Name:** `{name}`  \n- **Company ID:** `{companyId}`  \n- **Phone Number:** `{phone}` — *omit if not provided*  \n- **Website URL:** `{domain}` — *omit if not provided*\n\n---\n\n#### 📋 Pipelines\n\n**Pipeline Name:** `{label}`  \n- **Pipeline ID:** `{pipelineId}`  \n- **Order:** `{displayOrder}`  \n- **Stages:**  \n  - For each stage, follow the format in **📶 Stages**\n\n---\n\n#### 📶 Stages\n\n**Stage Name:** `{label}`  \n- **Stage ID:** `{id}`  \n- **Order:** `{displayOrder}`\n\n---\n\n#### 💼 Deals\n\n**Deal Name:** `{name}`  \n- **Deal ID:** `{dealId}`  \n- **Amount:** `{amount}` — *omit if not provided*  \n- **Stage:** `{stage.label}` — *omit if not provided*  \n- **Associated Contacts:** `{contact names}` — *omit if none*  \n- **Associated Companies:** `{company names}` — *omit if none*"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        5500,
        -300
      ],
      "id": "2b46b906-503f-441a-8d69-4d3c83431839",
      "name": "MCP Client - AI Chat Agent",
      "retryOnFail": false,
      "disabled": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        5400,
        -100
      ],
      "id": "7fb87ff3-98c0-424d-8d10-c65d9acf6b37",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "L5UoHZfkBt6nb3Ad",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        5240,
        -300
      ],
      "id": "7fe575c3-2c1d-42f3-b25c-bac556a55ec2",
      "name": "When chat message received",
      "webhookId": "583a9b22-7c4a-44ab-a60c-59745e10e481",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## MCP Client Testing",
        "height": 480,
        "width": 1020,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        5160,
        -400
      ],
      "typeVersion": 1,
      "id": "4f1907e6-fa13-4c71-9b6d-2f4abd0226fb",
      "name": "Sticky Note1",
      "disabled": true
    }
  ],
  "pinData": {},
  "connections": {
    "Update a HubSpot Company1": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete HubSpot Company1": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Fetch HubSpot Deals": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create a HubSpot Deal": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Fetch HubSpot Deal by dealId": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Contacts": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Contact": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Contact": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update Contact": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete Contact": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Companies": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Company": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Company": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update Company": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete Company": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Pipelines": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Pipeline": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Stages": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Stage": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        []
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "MCP Client - AI Chat Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "MCP Chat Client": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - AI Chat Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client - AI Chat Agent": {
      "main": [
        [],
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "MCP Client - AI Chat Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "MCP Client - AI Chat Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f001ade5-c13f-4dd1-8afc-7aac959e50df",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "8504ad3bf541c5d16e431f168070b21dcbf61af82ea7bee0c2d833e23192d019"
  },
  "id": "zkDz6xJ0WWG5xSyr",
  "tags": []
}