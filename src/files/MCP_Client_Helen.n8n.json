{
  "name": "MCP Client - Helen",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        380,
        100
      ],
      "id": "b2543e4d-937d-4d50-bd57-1a3c90d95294",
      "name": "When chat message received",
      "webhookId": "8632e2d3-9b1c-4c95-a771-1f08a19fa4e1"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "ü§ñ You are **Helen** ‚Äî a friendly, professional AI assistant for **HubSpot CRM tasks**  \nPowered by **CreativeGlu AI**\n\nüôã‚Äç‚ôÄÔ∏è **Greeting Protocol**  \nIf the user greets you, respond with:  \n**I'm Helen, your AI RevOps agent from Creative Glu and CodeStrap. What do you need to unblock today?**\n\nüîç **Tool Discovery Logic**  \nOn session start, immediately call:\n- `MCP - List Tools`\n\nüìñ **Execution Instructions**  \n- Interpret user queries within the context of **sales** and **HubSpot CRM**.  \n- To take action:\n  - Use `MCP - Execute Tool` to invoke a selected tool.  \n  - Always follow the tool's **description** and **schema** exactly.  \n- Select and execute the appropriate tool, prompt, or resource based on user intent.  \n- For tools supporting **pagination**, handle it as specified in the schema.  \n- When presenting data to the user:\n  - Never show raw IDs (e.g., `dealId`, `contactId`)  \n  - Always display human-readable fields such as `name`, `label`, or `title`.\n\nüìå **Handling \"All\" or \"Total\" Requests**  \nWhen users say \"all\", \"total\", \"summary\", \"sum\" or similar:\n- Assume they want **all available results**.  \n- If the tool has a `limit` or `perPage` field:\n  - Set it to the **maximum allowed**.  \n- If no such field exists, rely on the tool‚Äôs **default behavior**.\n\nüìå **Handling With References Request**  \n- Always use the **ID**, key, or similar **reference** when linking data across schemas.  \n\nüîÑ **Session Recovery Logic**  \nIf the previous user message resulted in **no response**, **no tool execution**, or a **stalled interaction** for **10 minutes**:\n- Assume the session may be in an invalid or stuck state.  \n- **Reinitialize the session** by calling:  \n  - `MCP - List Tools`  \n- Then respond to the user with:  \n  **\"Let‚Äôs pick up where we left off. What would you like to do?\"**\n\n‚ö†Ô∏è **Failure & Retry Logic**  \nIf a tool or prompt fails:  \n1. Analyze the error and determine the cause.  \n2. Retry the request, up to **three times** if necessary.  \n3. Notify the user **only after all retries fail** with a brief explanation and suggested next step.",
          "maxIterations": 30
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        680,
        0
      ],
      "id": "8ebbfcd0-e2a2-42b1-889b-01c7629680f0",
      "name": "AI Agent",
      "retryOnFail": true
    },
    {
      "parameters": {
        "connectionType": "http"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        840,
        220
      ],
      "id": "f06bc684-1b36-45e8-8e9f-77c2a2d6b431",
      "name": "MCP - List Tools",
      "credentials": {
        "mcpClientHttpApi": {
          "id": "PWCMity0g3k8UqWg",
          "name": "MCP Client (HTTP Streamable)"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        600,
        220
      ],
      "id": "abf1cba3-a576-4be7-bcfe-727ad49ae5ec",
      "name": "MCP Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "L5UoHZfkBt6nb3Ad",
          "name": "OpenAi Account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        720,
        220
      ],
      "id": "86afbcef-63a8-434e-a8fc-811228e0d183",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "kS35e9jQpjf0T0s4",
          "name": "Postgres Account"
        }
      }
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        380,
        -100
      ],
      "id": "f23c5e4d-a793-4ac0-b7aa-fd6b408a3b1b",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "connectionType": "http",
        "operation": "executeTool",
        "toolName": "={{ $fromAI(\"tool\", \"tool to use\")}}",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', ``, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        960,
        220
      ],
      "id": "fa9ec02b-5bc7-42af-970a-5a4a4ecd0d15",
      "name": "MCP - Execute Tool",
      "credentials": {
        "mcpClientHttpApi": {
          "id": "PWCMity0g3k8UqWg",
          "name": "MCP Client (HTTP Streamable)"
        }
      }
    },
    {
      "parameters": {
        "connectionType": "http",
        "operation": "readResource",
        "resourceUri": "=mcp://hubspot-resource/{{ $fromAI('resource', 'resource to use') }}/{{ $fromAI('id', 'id of the resource to use') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        2100,
        20
      ],
      "id": "5ca70172-3263-466f-b809-4139afe64ce0",
      "name": "MCP - Excecute Resources",
      "credentials": {
        "mcpClientHttpApi": {
          "id": "PWCMity0g3k8UqWg",
          "name": "MCP Client (HTTP Streamable)"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "connectionType": "http",
        "operation": "listResources"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        1980,
        20
      ],
      "id": "f08f870d-b758-4f1b-a682-13f79b26cb57",
      "name": "MCP - List Resources",
      "credentials": {
        "mcpClientHttpApi": {
          "id": "PWCMity0g3k8UqWg",
          "name": "MCP Client (HTTP Streamable)"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "connectionType": "http",
        "operation": "getPrompt",
        "promptName": "={{ $fromAI(\"prompt\", \"prompt to use\")}}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        1200,
        220
      ],
      "id": "cc459ce9-547e-47c3-af76-9739deae3a50",
      "name": "MCP - Execute Prompt",
      "credentials": {
        "mcpClientHttpApi": {
          "id": "PWCMity0g3k8UqWg",
          "name": "MCP Client (HTTP Streamable)"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "connectionType": "http",
        "operation": "listPrompts"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        1080,
        220
      ],
      "id": "a1a0609b-340f-4441-bd2c-c23b9d8b3791",
      "name": "MCP - List Prompts",
      "credentials": {
        "mcpClientHttpApi": {
          "id": "PWCMity0g3k8UqWg",
          "name": "MCP Client (HTTP Streamable)"
        }
      },
      "disabled": true
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MCP - List Tools": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MCP Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MCP - Execute Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "648c1545-3fd5-4e1d-ac85-678c47324866",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "8504ad3bf541c5d16e431f168070b21dcbf61af82ea7bee0c2d833e23192d019"
  },
  "id": "QeC5SuRuNj9HgIw6",
  "tags": []
}