{
  "name": "MCP Client - Helen (dev)",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        200
      ],
      "id": "b647c812-144a-4692-a766-089e2480335f",
      "name": "When chat message received",
      "webhookId": "8632e2d3-9b1c-4c95-a771-1f08a19fa4e1"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "ü§ñ Helen ‚Äî CRM Assistant (CreativeGlu AI)  \nFriendly, professional AI RevOps Agent for HubSpot CRM tasks, integrated with MCP and powered by CreativeGlu AI.\n\nüôã‚Äç‚ôÄÔ∏è Greeting Protocol  \nIf the user greets you, respond with:  \n\"I'm Helen, your AI RevOps agent from Creative Glu and CodeStrap. What do you need to unblock today?\"\n\nüîç Mandatory Discovery Logic  \nAt the start of every session, you must immediately and always call:  \n- MCP - List Tools  \n- MCP - List Prompts  \n- MCP - List Resources\n\nDo not proceed or respond to the user until all lists are fully parsed and understood.  \nNever use cached or outdated tool data.\n\n‚è≥ Session Recovery Logic  \nTrigger this if any of the following occur:  \n- No tool is executed  \n- No response is generated  \n- Session is inactive or stuck for 10 minutes\n\nRecovery Steps:  \n1. Call:  \n   - MCP - List Tools  \n   - MCP - List Prompts  \n   - MCP - List Resources  \n2. Respond with:  \n   \"Let‚Äôs pick up where we left off. What would you like to do?\"\n\nüìñ Execution Instructions  \n- Always interpret user queries within the context of sales and HubSpot CRM.  \n- To take action:  \n  - Use MCP - Execute Tool to invoke the correct tool.  \n- Strictly follow the tool‚Äôs description and schema. No assumptions. No shortcuts.  \n- If a tool supports pagination, handle it as defined in the schema.\n\nüìå Handling and Response Guidelines  \n- When presenting results:  \n  - Never show raw IDs (e.g., dealId, contactId) ‚Äî unless the user explicitly asks for them.  \n  - Always display human-readable fields like name, label, or title.  \n- For currency fields (e.g., amount), always format using '$'.\n\nWhen users say:  \n‚Äúall‚Äù, ‚Äútotal‚Äù, ‚Äúsummary‚Äù, ‚Äúsum‚Äù, etc.  \n‚Üí Assume they want all available results.  \n- If the tool schema includes `limit` or `perPage`, set it to the maximum allowed.  \n- If not, fall back to the tool‚Äôs default behavior.\n\n‚è±Ô∏è Response Timing Tracker  \n- Log the timestamp when the user message is received.  \n- Log the timestamp when the assistant response is sent.  \n- Calculate and record the elapsed time in seconds, minutes, and hours.  \n- Optionally use this for performance monitoring or UX optimization.  \n- Append to user replies:  \n  \"It took me [time] to process your request.\"",
          "maxIterations": 30
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        560,
        100
      ],
      "id": "04494d59-f0a3-44fe-9318-1c06dd5b672b",
      "name": "AI Agent",
      "retryOnFail": true
    },
    {
      "parameters": {
        "connectionType": "http"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        460,
        320
      ],
      "id": "09dcbb62-7019-4da2-81d5-7e8856eca313",
      "name": "MCP - List Tools",
      "credentials": {
        "mcpClientHttpApi": {
          "id": "9M0xR3Zu5qvwVL3o",
          "name": "MCP Client (HTTP Streamable) (dev)"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        220,
        320
      ],
      "id": "43cb782d-56ba-4688-b2a7-9ce0f13e989d",
      "name": "MCP Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "L5UoHZfkBt6nb3Ad",
          "name": "OpenAi Account"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        340,
        320
      ],
      "id": "7acb9f1d-bc70-4e2a-bf07-1835554bab59",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "kS35e9jQpjf0T0s4",
          "name": "Postgres Account"
        }
      }
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        0
      ],
      "id": "d1f95403-d49a-4866-854d-05910f7bd156",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "connectionType": "http",
        "operation": "executeTool",
        "toolName": "={{ $fromAI(\"tool\", \"tool to use\")}}",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', ``, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        580,
        320
      ],
      "id": "d4a6fd79-af68-49f0-8312-56e311eb54a4",
      "name": "MCP - Execute Tool",
      "credentials": {
        "mcpClientHttpApi": {
          "id": "9M0xR3Zu5qvwVL3o",
          "name": "MCP Client (HTTP Streamable) (dev)"
        }
      }
    },
    {
      "parameters": {
        "connectionType": "http",
        "operation": "listPrompts"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        700,
        320
      ],
      "id": "7e6375d0-8c9f-41a2-a3e6-e54bad8cd907",
      "name": "MCP - List Prompts",
      "credentials": {
        "mcpClientHttpApi": {
          "id": "9M0xR3Zu5qvwVL3o",
          "name": "MCP Client (HTTP Streamable) (dev)"
        }
      }
    },
    {
      "parameters": {
        "connectionType": "http",
        "operation": "getPrompt",
        "promptName": "={{ $fromAI(\"prompt\", \"prompt to use\")}}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        820,
        320
      ],
      "id": "ae22220c-5c05-4dcf-8a38-c84efe5b5162",
      "name": "MCP - Execute Prompt",
      "credentials": {
        "mcpClientHttpApi": {
          "id": "9M0xR3Zu5qvwVL3o",
          "name": "MCP Client (HTTP Streamable) (dev)"
        }
      }
    },
    {
      "parameters": {
        "connectionType": "http",
        "operation": "listResources"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        940,
        320
      ],
      "id": "a88816d6-2c23-46a7-bee8-8a2712c192da",
      "name": "MCP Client - List Resources",
      "credentials": {
        "mcpClientHttpApi": {
          "id": "9M0xR3Zu5qvwVL3o",
          "name": "MCP Client (HTTP Streamable) (dev)"
        }
      }
    },
    {
      "parameters": {
        "connectionType": "http",
        "operation": "readResource",
        "resourceUri": "={{ $fromAI(\"resource\", \"resource to use\")}}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        1060,
        320
      ],
      "id": "d74b256f-26bb-4079-9c93-1f7287904c31",
      "name": "MCP - Execute Resource",
      "credentials": {
        "mcpClientHttpApi": {
          "id": "9M0xR3Zu5qvwVL3o",
          "name": "MCP Client (HTTP Streamable) (dev)"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MCP - List Tools": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MCP Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MCP - Execute Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MCP - List Prompts": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MCP - Execute Prompt": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client - List Resources": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MCP - Execute Resource": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "4d162dd7-aa41-48aa-bf1d-aaeb00e96a80",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "8504ad3bf541c5d16e431f168070b21dcbf61af82ea7bee0c2d833e23192d019"
  },
  "id": "upvHfIYgc0XPg7hG",
  "tags": []
}