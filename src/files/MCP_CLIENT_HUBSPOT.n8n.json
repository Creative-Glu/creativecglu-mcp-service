{
  "name": "MCP Client - Hubspot",
  "nodes": [
    {
      "parameters": {
        "content": "## MCP Client - Hubspot Companies Nodes",
        "height": 520,
        "width": 660,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1060,
        500
      ],
      "typeVersion": 1,
      "id": "1104b6f9-4a44-4009-8dc7-4c4e0e5b7256",
      "name": "Sticky Note2",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## MCP Client - Hubspot Deals Nodes",
        "height": 520,
        "width": 860,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -380,
        500
      ],
      "typeVersion": 1,
      "id": "a6ef8c61-0016-4dfe-8365-53f7cd91fefc",
      "name": "Sticky Note3",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## MCP Client - Hubspot Contacts Nodes",
        "height": 520,
        "width": 660
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1740,
        500
      ],
      "typeVersion": 1,
      "id": "8f0ce5b5-3dab-487d-8b12-8c8099b2c172",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## MCP Client - Hubspot Pipelines & Stages Nodes",
        "height": 400,
        "width": 460,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        500,
        500
      ],
      "typeVersion": 1,
      "id": "efaaca71-ea1e-43f8-ba23-3f77de8394f9",
      "name": "Sticky Note5",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## MCP Client - Hubspot",
        "height": 420,
        "width": 1280,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1740,
        60
      ],
      "typeVersion": 1,
      "id": "3ebaf405-84d2-465b-8636-29ee2a239177",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "public": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -1660,
        220
      ],
      "id": "c039a1c6-ad1d-4855-b89d-d0455dae5ac2",
      "name": "MCP Client - Chat",
      "webhookId": "583a9b22-7c4a-44ab-a60c-59745e10e481"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "zkDz6xJ0WWG5xSyr",
          "mode": "list",
          "cachedResultName": "MCP Client"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -1460,
        220
      ],
      "id": "6ea25bb7-b50c-4de0-93a2-eb8906c2e1d6",
      "name": "MCP Client (Testing)"
    },
    {
      "parameters": {
        "path": "2adae765-fc48-47ff-8a64-c214887d3d6a"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 1,
      "position": [
        -1620,
        580
      ],
      "id": "cbe79eec-b111-4665-a74a-473c7e76d885",
      "name": "MCP Client - Hubspot Contacts Node",
      "webhookId": "2adae765-fc48-47ff-8a64-c214887d3d6a"
    },
    {
      "parameters": {
        "path": "c27798eb-a724-4411-93a0-59c2df77d1b0"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 1,
      "position": [
        -940,
        580
      ],
      "id": "08fc94d1-3e6c-4f33-9e9a-c436446a1e37",
      "name": "MCP Client - Hubspot Companies Node",
      "webhookId": "c27798eb-a724-4411-93a0-59c2df77d1b0"
    },
    {
      "parameters": {
        "path": "9ddf25db-1ba1-4c6c-8399-533b579f4ce7"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 1,
      "position": [
        -160,
        580
      ],
      "id": "6c62cc3f-b038-4cc1-a480-a72acae66b93",
      "name": "MCP Client - Hubspot Deals Node",
      "webhookId": "9ddf25db-1ba1-4c6c-8399-533b579f4ce7"
    },
    {
      "parameters": {
        "description": "### get-contacts\n\n---\n\n**Purpose**  \nList or search contacts.\n\n---\n\n**Optional filters**  \n`perPage` · `firstname` · `lastname` · `phone` · `email`  \n(omit empty fields, AND logic, case-insensitive; URL-encode phone/email)\n\n---\n\n**Defaults & rules**  \n- No filters → paginated list, `perPage` **200** if user requests “all”.  \n- Return unique, sorted, readable results.\n\n---\n\n**Compound flow**  \n1 ► get-companies “Acme Corp” → companyId  \n2 ► get-contacts {companyId, phone:not null}\n\n---\n\n**Natural commands**  \n“Show me all contacts” · “Find john@example.com” · “List contacts named Sarah” · “Contacts with 555-1234”\n\n---\n\n**Example payload**\n```json\n{\n  \"perPage\": 200,\n  \"firstname\": \"John\",\n  \"lastname\": \"Doe\",\n  \"phone\": \"+12125554321\",\n  \"email\": \"john.doe@example.com\"\n}\n",
        "jsCode": "const qs = Object.fromEntries(\n  Object.entries(query).filter(([_, value]) => value != null && value !== '')\n);\n\nconst options = {\n  method: 'GET',\n  url: 'http://35.170.240.97/api/v1/hubspot/contacts',\n  qs,\n  headers: {\n    'Authorization': 'Bearer 9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2'\n  },\n  json: true\n};\n\nconst response = await this.helpers.httpRequest.call(this, options);\n\nreturn JSON.stringify(response);\n",
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"firstname\": {\n      \"type\": \"string\",\n      \"description\": \"Partial or full match on first name. Fuzzy matching allowed. Case-insensitive.\"\n    },\n    \"lastname\": {\n      \"type\": \"string\",\n      \"description\": \"Partial or full match on last name. Fuzzy matching allowed. Case-insensitive.\"\n    },\n    \"email\": {\n      \"type\": \"string\",\n      \"description\": \"Match against an email address. Can be partial (e.g., @example.com). Case-insensitive.\"\n    },\n    \"phone\": {\n      \"type\": \"string\",\n      \"description\": \"Match based on full or partial phone number. Accepts various formats (e.g., +1, dashes, or plain numbers).\"\n    },\n    \"perPage\": {\n      \"type\": \"number\",\n      \"description\": \"Optional cap on number of contacts returned.\"\n    }\n  },\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        -1680,
        760
      ],
      "id": "fee1f35d-3ceb-42e9-a325-a20f76b144ac",
      "name": "Get Contacts"
    },
    {
      "parameters": {
        "description": "### update-contact\n\n---\n\n**Purpose**  \nModify an existing contact.\n\n---\n\n**Required (internal)**  \n`contactId` — resolve with get-contacts; never include in payload.\n\n---\n\n**Optional**  \n`firstname` · `lastname` · `email` · `phone` (E.164) · `companyId`\n\n---\n\n**Rules**  \n1. Resolve contactId if missing.  \n2. Abort if no changes.  \n3. Email change → check duplicates; if conflict, ask to skip, update other, or proceed.  \n4. Only company name given → get-companies → companyId or prompt to create-company.  \n5. Skip companyId if already linked.  \n6. Show payload preview; require “confirm” before API call.  \n7. Omit empty fields; validate email/phone.\n\n---\n\n**Compound flow**  \nCan trigger follow-ups (e.g., create-deal after update).\n\n---\n\n**Example payload**\n```json\n{\n  \"firstname\": \"Jane\",\n  \"lastname\": \"Smith\",\n  \"email\": \"jane.smith@example.com\",\n  \"phone\": \"+12125554321\",\n  \"companyId\": \"987654321\"\n}\n",
        "jsCode": "const { contactId, ...body } = Object.fromEntries(\n  Object.entries(query).filter(([_, value]) => value != null && value !== '')\n);\n\nconst options = {\n  method: 'PUT',\n  url: `http://35.170.240.97/api/v1/hubspot/contacts/${contactId}`,\n  headers: {\n    'Authorization': 'Bearer 9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2'\n  },\n  body,\n  json: true\n};\n\nconst response = await this.helpers.httpRequest.call(this, options);\n\nreturn JSON.stringify(response);\n",
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"contactId\": {\n      \"type\": \"string\",\n      \"description\": \"Contact ID of the contact. required\"\n    },\n    \"firstname\": {\n      \"type\": \"string\",\n      \"description\": \"New first name for the contact. Optional.\"\n    },\n    \"lastname\": {\n      \"type\": \"string\",\n      \"description\": \"New last name for the contact. Optional.\"\n    },\n    \"email\": {\n      \"type\": \"string\",\n      \"description\": \"New email address for the contact. Must be valid and unique. Optional.\"\n    },\n    \"phone\": {\n      \"type\": \"string\",\n      \"description\": \"Updated phone number in international format (e.g., +12125554321). Optional.\"\n    },\n    \"companyId\": {\n      \"type\": \"string\",\n      \"description\": \"Provide the associated company ID to link the contact. If a company name is given, perform a lookup. Optional.\"\n    }\n  },\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        -1360,
        860
      ],
      "id": "43069f4d-4b53-403b-85ae-0d27c056ad4e",
      "name": "Update Contact"
    },
    {
      "parameters": {
        "description": "### delete-contact\n\n---\n\n**Purpose**  \nPermanently remove a contact from the CRM.\n\n---\n\n**Required (internal)**  \n`contactId` — resolve with get-contacts; never include in the payload.\n\n---\n\n**Optional lookup**  \n`firstname` · `lastname` · `email` · `phone`  \n(AND logic, case-insensitive)\n\n---\n\n**Rules**  \n1. Resolve `contactId`; if multiple matches, let the user choose.  \n2. Show contact preview and ask for **delete / confirm**.  \n3. Clearly warn that deletion is irreversible.  \n4. No body is sent; the endpoint uses the resolved `contactId`.\n\n---\n\n**Compound flow**  \nCan precede follow-up actions (e.g., create-contact).\n\n---\n\n**Natural commands**  \n“Delete John Smith” · “Remove contact john@example.com” · “Erase +12125559876”\n\n---\n\n**Example request**  \n`DELETE /api/v1/hubspot/contacts/{contactId}`\n",
        "jsCode": "const { contactId } = Object.fromEntries(\n  Object.entries(query).filter(([_, value]) => value != null && value !== '')\n);\n\nconst options = {\n  method: 'DELETE',\n  url: `http://35.170.240.97/api/v1/hubspot/contacts/${contactId}`,\n  headers: {\n    'Authorization': 'Bearer 9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2'\n  },\n  json: true\n};\n\nconst response = await this.helpers.httpRequest.call(this, options);\n\nreturn JSON.stringify(response);\n",
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"contactId\": {\n      \"type\": \"string\",\n      \"description\": \"Contact ID of the contact. required\"\n    }\n  },\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        -1220,
        760
      ],
      "id": "5370cbff-aa91-4fff-a57f-d5798d876afd",
      "name": "Delete Contact"
    },
    {
      "parameters": {
        "description": "### get-companies\n\n---\n\n**Purpose**  \nList or search companies.\n\n---\n\n**Optional filters**  \n`limit` · `name` · `domain` · `phone`  \n(omit empty fields, AND logic, case-insensitive; URL-encode domain/phone)\n\n---\n\n**Defaults & rules**  \n- No filters → paginated list, limit **100** if user requests “all”.  \n- Return unique, sorted, readable results.\n\n---\n\n**Compound flow**  \nOften used first, e.g.:  \n1 ► get-companies “Beta Ltd” → companyId  \n2 ► create-contact {companyId, …}\n\n---\n\n**Natural commands**  \n“Show me all companies” · “Find Acme Corp” · “Search domain acmecorp.com” · “Companies with +14155552671”\n\n---\n\n**Example payload**\n```json\n{\n  \"limit\": 10,\n  \"name\": \"Acme Corp\",\n  \"domain\": \"acmecorp.com\",\n  \"phone\": \"+14155552671\"\n}\n",
        "jsCode": "const qs  = Object.fromEntries(\n  Object.entries(query).filter(([_, value]) => value != null && value !== '')\n);\n\nconst options = {\n  method: 'GET',\n  url: 'http://35.170.240.97/api/v1/hubspot/companies',\n  qs,\n  headers: {\n    'Authorization': 'Bearer 9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2'\n  },\n  json: true\n};\n\nconst response = await this.helpers.httpRequest.call(this, options);\n\nreturn JSON.stringify(response);\n",
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"Filter by company name. Partial match.  and Fuzzy matching allowed. Optional.\"\n    },\n    \"domain\": {\n      \"type\": \"string\",\n      \"description\": \"Filter by company domain (e.g., example.com). Optional.\"\n    },\n    \"phone\": {\n      \"type\": \"string\",\n      \"description\": \"Filter by company phone number. Must be a valid international format (e.g., +14155552671). Optional.\"\n    },\n    \"perPage\": {\n      \"type\": \"number\",\n      \"description\": \"Optional cap on number of companies returned.\"\n    }\n  },\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        -1000,
        760
      ],
      "id": "1e0d8389-3610-46f7-806f-8deb5f4565d4",
      "name": "Get Companies"
    },
    {
      "parameters": {
        "description": "### create-company\n\n---\n\n**Purpose**  \nRegister a new company in the CRM.\n\n---\n\n**Required**  \n`name`\n\n---\n\n**Optional**  \n`domain` · `phone` · `email`\n\n---\n\n**Rules**  \n1. Check duplicates with get-company (match on name or domain).  \n   - If found, ask to skip, update, or create anyway.  \n2. Show payload preview; require “confirm” before the API call.  \n3. Validate email, domain, phone; omit empty fields.\n\n---\n\n**Compound flow**  \nOften used before create-contact or create-deal.  \nExample: get-company “Beta Ltd” → create-company → create-contact.\n\n---\n\n**Natural commands**  \n“Add Acme Corporation” · “Create FastTech fasttech.com” · “Register Global Systems contact@globalsys.com” · “New company GreenLeaf phone +12125550099”\n\n---\n\n**Example payload**\n```json\n{\n  \"name\": \"Acme Corporation\",\n  \"domain\": \"acme.com\",\n  \"phone\": \"+12125551234\",\n  \"email\": \"info@acme.com\"\n}\n",
        "jsCode": "const body = Object.fromEntries(\n  Object.entries(query).filter(([_, value]) => value != null && value !== '')\n);\n\nconst options = {\n  method: 'POST',\n  url: 'http://35.170.240.97/api/v1/hubspot/companies',\n  headers: {\n    'Authorization': 'Bearer 9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2'\n  },\n  body,\n  json: true\n};\n\nconst response = await this.helpers.httpRequest.call(this, options);\n\nreturn JSON.stringify(response);\n",
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"The name of the company (required).\"\n    },\n    \"domain\": {\n      \"type\": \"string\",\n      \"description\": \"The company’s website domain (e.g., example.com). Optional.\"\n    },\n    \"phone\": {\n      \"type\": \"string\",\n      \"description\": \"The company’s main phone number (e.g., +12125551234). Optional.\"\n    }\n  },\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        -860,
        860
      ],
      "id": "369431c9-cc43-4dca-805a-4a4e72078d28",
      "name": "Create Company"
    },
    {
      "parameters": {
        "description": "### update-company\n\n---\n\n**Purpose**  \nModify an existing company record.\n\n---\n\n**Required (internal)**  \n`companyId` — resolve with get-companies; never include in payload.\n\n---\n\n**Optional**  \n`name` · `domain` · `phone` · `email`\n\n---\n\n**Rules**  \n1. Resolve companyId if missing (search by name).  \n2. Abort if no changes.  \n3. Domain/email change → check duplicates; if conflict, ask to skip, update other, or proceed.  \n4. Only name given → get-companies or prompt to create-company.  \n5. Show payload preview; require “confirm” before API call.  \n6. Omit empty fields; validate formats.\n\n---\n\n**Compound flow**  \nOften paired with create-deal, update-contact, etc.  \nExample: get-companies “Acme Corp” → update-company → create-deal.\n\n---\n\n**Natural commands**  \n“Update Acme Corp phone +14155550000” · “Change Beta Ltd domain beta.io” · “Modify GreenLeaf email support@greenleaf.io”\n\n---\n\n**Example payload**\n```json\n{\n  \"name\": \"Acme Corporation\",\n  \"domain\": \"acme.co\",\n  \"phone\": \"+14155552671\",\n  \"email\": \"support@acme.co\"\n}\n",
        "jsCode": "const { companyId, ...body } = Object.fromEntries(\n  Object.entries(query).filter(([_, value]) => value != null && value !== '')\n);\n\nconst options = {\n  method: 'PUT',\n  url: `http://35.170.240.97/api/v1/hubspot/companies/${companyId}`,\n  headers: {\n    'Authorization': 'Bearer 9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2'\n  },\n  body,\n  json: true\n};\n\nconst response = await this.helpers.httpRequest.call(this, options);\n\nreturn JSON.stringify(response);\n",
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"companyId\": {\n      \"type\": \"string\",\n      \"description\": \"Company ID of the company. required\"\n    },\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"Enter the new company name (optional).\"\n    },\n    \"domain\": {\n      \"type\": \"string\",\n      \"description\": \"Enter the updated company domain (optional, e.g., acme.com).', 'string')\"\n    },\n    \"phone\": {\n      \"type\": \"string\",\n      \"description\": \"Enter the updated phone number (optional, valid international format, e.g., +12125554321).\"\n    }\n  },\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        -680,
        860
      ],
      "id": "b4048ead-110d-45f5-8a2b-06017ff3d31a",
      "name": "Update Company"
    },
    {
      "parameters": {
        "description": "### delete-company\n\n---\n\n**Purpose**  \nPermanently remove a company from the CRM.\n\n---\n\n**Required (internal)**  \n`companyId` — resolve with get-companies; never include in payload.\n\n---\n\n**Optional lookup**  \n`name` · `domain` · `phone`  \n(AND logic, case-insensitive)\n\n---\n\n**Rules**  \n1. If `companyId` missing, search via lookup fields; let user pick if multiple.  \n2. Show company preview; warn deletion is irreversible.  \n3. Require **delete / confirm** before API call.  \n4. No JSON body—endpoint uses the resolved `companyId`.\n\n---\n\n**Compound flow**  \nCommon follow-ups: unlink contacts, reassign deals, etc.  \nExample: get-companies “Acme Corp” → delete-company → update-deal.\n\n---\n\n**Natural commands**  \n“Delete Acme Corp” · “Remove domain acme.com” · “Erase +14155552671” · “Delete Beta Ltd and unlink contacts”\n\n---\n\n**Example request**  \n`DELETE /api/v1/hubspot/companies/{companyId}`\n",
        "jsCode": "const { companyId } = Object.fromEntries(\n  Object.entries(query).filter(([_, value]) => value != null && value !== '')\n);\n\nconst options = {\n  method: 'DELETE',\n  url: `http://35.170.240.97/api/v1/hubspot/companies/${companyId}`,\n  headers: {\n    'Authorization': 'Bearer 9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2'\n  },\n  json: true\n};\n\nconst response = await this.helpers.httpRequest.call(this, options);\n\nreturn JSON.stringify(response);\n",
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"companyId\": {\n      \"type\": \"string\",\n      \"description\": \"Company ID of the company. required\"\n    }\n  },\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        -540,
        760
      ],
      "id": "047585af-6c8b-484f-82bb-7cf6064fd845",
      "name": "Delete Company"
    },
    {
      "parameters": {
        "description": "### get-deals\n\n---\n\n**Purpose**  \nSearch and list deals in the CRM.\n\n---\n\n**Required (resolved internally)**  \n`pipelineId` — resolved via `get-pipeline` (defaults to `\"default\"`); **never** included in the payload.\n\n---\n\n**Optional filters**  \n`perPage` · `name` . `stageId` · `stageName` · `pipelineName` · `contactId` · `companyId`  \n(omit empty fields, case-insensitive, combined with **AND** logic)\n\n---\n\n**Rules**  \n- `stageName` present → use `get-stages` (fuzzy match) → derive `stageId`.  \n- `pipelineName` present → use `get-pipelines` (fuzzy match) → derive `pipelineId`.  \n- No filters → paginated list; default **perPage = 200** when the user asks for “all”.  \n- Validate and sanitize every filter.  \n- Return each deal’s `dealId`, `name`, `amount`, `stage`, `pipeline`, and associations.  \n- Perform **fuzzy matching** on `name` (handle tense or form variations that convey the same meaning).  \n- If no matches, suggest alternate filters.\n\n---\n\n**Compound flow**  \nExample: `get-companies \"Acme Corp\"` → `companyId` → `get-deals {companyId}` → user selects deal → `update-deal`.\n\n---\n\n**Natural commands**  \n“Show me all deals” · “Find deals named Enterprise” · “List deals worth $10,000” · “Deals in Negotiation stage” · “Get deals for John Smith”\n\n---\n\n**Example payload**\n```json\n{\n  \"perPage\": 200,\n  \"name\": \"Enterprise\",\n  \"stageId\": \"123\",\n  \"companyId\": \"456\"\n}\n",
        "jsCode": "const qs  = Object.fromEntries(\n  Object.entries(query).filter(([_, value]) => value != null && value !== '')\n);\n\nconst options = {\n  method: 'GET',\n  url: 'http://35.170.240.97/api/v1/hubspot/deals',\n  qs,\n  headers: {\n    'Authorization': 'Bearer 9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2'\n  },\n  json: true\n};\n\nconst response = await this.helpers.httpRequest.call(this, options);\n\nreturn JSON.stringify(response);\n",
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"perPage\": {\n      \"type\": \"integer\",\n      \"description\": \"Maximum number of deals to return.\"\n    },\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"Partial or full match on deal name (optional).\"\n    },\n    \"stageName\": {\n      \"type\": \"string\",\n      \"description\": \"Stage label to filter by (optional, fuzzy match).\"\n    },\n    \"pipelineName\": {\n      \"type\": \"string\",\n      \"description\": \"Pipeline label to filter by (optional).\"\n    },\n    \"stageId\": {\n      \"type\": \"string\",\n      \"description\": \"Return deals linked to this stage (optional).\"\n    },\n    \"pipelineId\": {\n      \"type\": \"string\",\n      \"description\": \"Return deals linked to this pipeline (optional).\"\n    },\n    \"contactId\": {\n      \"type\": \"string\",\n      \"description\": \"Return deals linked to this contact (optional).\"\n    },\n    \"companyId\": {\n      \"type\": \"string\",\n      \"description\": \"Return deals linked to this company (optional).\"\n    }\n  },\n  \"additionalProperties\": false\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        -320,
        760
      ],
      "id": "8c029138-553c-4945-bcec-fc6c3b239497",
      "name": "Get Deals"
    },
    {
      "parameters": {
        "description": "### create-deal\n\n---\n\n**Purpose**  \nOpen a new deal in the CRM.\n\n---\n\n**Required**  \n`amount` — number ≥ 1 (cast from string if needed)\n\n---\n\n**Optional filters**  \n`name` · `contactId` · `companyId` · `stageId` · `pipelineId` · `contactName` · `companyName` · `stageName` · `pipelineName`\n\n---\n\n**Rules**  \n1. **ID resolution**  \n   - `contactName` → **get-contacts** → `contactId` (let user pick if multiple).  \n   - `companyName` → **get-companies** → `companyId`.  \n   - `stageName` → **get-stages** (fuzzy matching (handles tense or form variations) → `stageId` .  \n   - `pipelineName` → **get-pipelines** (fuzzy matching (handles tense or form variations) → `pipelineId`.  \n2. If `name` is missing, auto-generate one (contact/company + amount; ≥ 5 words).  \n3. Show a payload preview; wait for **“confirm / yes / create”** before calling the API.  \n4. Omit null or unchanged fields; ensure valid JSON primitives.\n\n---\n\n**Compound flow**  \nExample: `create-contact` → return `contactId` → `create-deal {amount, contactId, stageId, pipelineId}`.\nExample: `create-company` → return `companyId` → `create-deal {amount, companyId, stageId, pipelineId}`.\n\n---\n\n**Natural commands**  \n“Create a new deal for John Smith worth $5,000.” · “Start a $2,500 deal in the Sales Pipeline for Maria.”\n\n---\n\n**Example payload**\n```json\n{\n  \"name\": \"Q2 Growth Opportunity for John Smith\",\n  \"amount\": 1000,\n  \"contactId\": \"123123\",\n  \"companyId\": \"123123\",\n  \"stageId\": \"stage_qualification\",\n  \"pipelineId\": \"sales_pipeline\"\n}\n",
        "jsCode": "const body = Object.fromEntries(\n  Object.entries(query).filter(([_, value]) => value != null && value !== '')\n);\n\nconst options = {\n  method: 'POST',\n  url: 'http://35.170.240.97/api/v1/hubspot/deals',\n  headers: {\n    'Authorization': 'Bearer 9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2'\n  },\n  body,\n  json: true\n};\n\nconst response = await this.helpers.httpRequest.call(this, options);\n\nreturn JSON.stringify(response);\n",
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"This field is optional. If omitted, a default deal name will be generated using contact name and amount.\"\n    },\n    \"amount\": {\n      \"type\": \"number\",\n      \"description\": \"This field is required. Specifies the monetary value of the deal.\"\n    },\n    \"contactId\": {\n      \"type\": \"string\",\n      \"description\": \"This field is optional. You can pass either the contact ID.\"\n    },\n    \"contactIds\": {\n      \"type\": \"string\",\n      \"description\": \"This field is optional. You can pass either the array of contact IDs.\"\n    },\n    \"companyId\": {\n      \"type\": \"string\",\n      \"description\": \"This field is optional. You can pass either the company ID.\"\n    },\n    \"companyIds\": {\n      \"type\": \"string\",\n      \"description\": \"This field is optional. You can pass either the array of company IDs.\"\n    },\n    \"stageId\": {\n      \"type\": \"string\",\n      \"description\": \"This field is optional. Specifies the stageId of the deal.\"\n    },\n    \"pipelineId\": {\n      \"type\": \"string\",\n      \"description\": \"This field is optional. Specifies the pipelineID of the deal.\"\n    },\n    \"contactName\": {\n      \"type\": \"string\",\n      \"description\": \"This field is optional. You can pass either the contact name.\"\n    },\n    \"companyName\": {\n      \"type\": \"string\",\n      \"description\": \"This field is optional. You can pass either the company name.\"\n    },\n    \"stageName\": {\n      \"type\": \"string\",\n      \"description\": \"This field is optional. You can pass either the stage name.\"\n    },\n    \"pipelineName\": {\n      \"type\": \"string\",\n      \"description\": \"This field is optional. You can pass either the pipeline name.\"\n    }\n  },\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        -180,
        860
      ],
      "id": "9f1128d5-3da6-48b4-bced-bd5016a2fa47",
      "name": "Create Deal"
    },
    {
      "parameters": {
        "description": "### update-deal\n\n---\n\n**Purpose**  \nModify an existing deal.\n\n---\n\n**Required (resolved internally)**  \n`dealId` — resolve with **get-deals**; never include in payload.\n\n---\n\n**Updatable fields**  \n`name` · `amount` (number ≥ 1) · `stageId` · `pipelineId`  \n(only include fields that actually change)\n\n---\n\n**Rules**  \n1. If only a **deal name** is given, resolve `dealId` via **get-deals**.  \n2. `amount` supplied as string → cast to number.  \n3. If both `pipelineId` and `stageId` are present, verify the stage belongs to that pipeline.  \n4. Remove any null, empty, or unchanged fields. Abort if nothing changes.  \n5. Show payload preview; wait for **“accept / yes / proceed”** before calling the API.  \n6. After success, return a brief summary of updated values.\n\n---\n\n**Natural commands**  \n“Update Spring Campaign to Negotiation.” · “Change Enterprise Deal amount to $15 000.” · “Rename Acme deal to Q2 Growth Opportunity.” · “Put the FastTech deal in Closed Won.”\n\n---\n\n**Example payload**\n```json\n{\n  \"name\": \"Updated Enterprise Deal\",\n  \"amount\": 15000,\n  \"stageId\": \"proposal_sent\"\n}\n",
        "jsCode": "const { dealId, ...body } = Object.fromEntries(\n  Object.entries(query).filter(([_, value]) => value != null && value !== '')\n);\n\nconst options = {\n  method: 'PUT',\n  url: `http://35.170.240.97/api/v1/hubspot/deals/${dealId}`,\n  headers: {\n    'Authorization': 'Bearer 9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2'\n  },\n  body,\n  json: true\n};\n\nconst response = await this.helpers.httpRequest.call(this, options);\n\nreturn JSON.stringify(response);\n",
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"This field is optional. New the deal name.\"\n    },\n    \"amount\": {\n      \"type\": \"number\",\n      \"description\": \"This field is optional. New monetary value amount of the deal.\"\n    },\n    \"stageId\": {\n      \"type\": \"string\",\n      \"description\": \"This field is optional. You can pass either the stage ID or stage name.\"\n    }\n  },\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        0,
        860
      ],
      "id": "2cc2ffce-61aa-4b98-adc9-2a86cc03d25f",
      "name": "Update Deal"
    },
    {
      "parameters": {
        "description": "### delete-deal\n\n---\n\n**Purpose**  \nPermanently remove a deal from the CRM.\n\n---\n\n**Required (resolved internally)**  \n`dealId` — resolve with **get-deals**; never include in the payload.\n\n---\n\n**Optional lookup**  \n`name` — deal title (partial or full match)  \n(Use only if `dealId` is unknown.)\n\n---\n\n**Rules**  \n1. If only a **deal name** is given, search via **get-deals**.  \n   - Multiple matches → show list and let the user pick.  \n2. Display a deal preview; warn that deletion is irreversible.  \n3. Wait for explicit **“delete / confirm / yes”** before calling the API.  \n4. No JSON body is sent—the endpoint uses the resolved `dealId`.\n\n---\n\n**Compound flow**  \nExample: `get-deals {name:\"Q3 Growth Opportunity\"}` → user picks → preview → confirm → `delete-deal`.\n\n---\n\n**Natural commands**  \n“Delete the deal named Spring Campaign.” · “Remove Acme Corp deal.” · “Erase Q2 Opportunity.” · “Delete the deal I just created.”\n\n---\n\n**Example request**  \n`DELETE /api/v1/hubspot/deals/{dealId}`\n",
        "jsCode": "const { dealId } = Object.fromEntries(\n  Object.entries(query).filter(([_, value]) => value != null && value !== '')\n);\n\nconst options = {\n  method: 'DELETE',\n  url: `http://35.170.240.97/api/v1/hubspot/deals/${dealId}`,\n  headers: {\n    'Authorization': 'Bearer 9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2'\n  },\n  json: true\n};\n\nconst response = await this.helpers.httpRequest.call(this, options);\n\nreturn JSON.stringify(response);\n",
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"dealId\": {\n      \"type\": \"string\",\n      \"description\": \"Deal ID of the deal. required\"\n    }\n  },\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        180,
        860
      ],
      "id": "e71b092f-25f0-4b3f-9a93-2585dda1cfb4",
      "name": "Delete Deal"
    },
    {
      "parameters": {
        "description": "### move-deal-stage\n\n---\n\n**Purpose**  \nMove an existing deal to a new stage within its pipeline.\n\n---\n\n**Required (resolved internally)**  \n`dealId` — resolve with **get-deals**; never include in the payload.\n\n---\n\n**Required payload field**  \n`stageId` — ID of the target stage (must belong to the deal’s pipeline).\n\n---\n\n**Rules**  \n1. If only a **dealName** is given, resolve `dealId` via **get-deals**.  \n2. If only a **stageName** is given, resolve `stageId` via **get-stages** with fuzzy matching (handles tense or form variations).  \n3. Verify the stage belongs to the deal’s pipeline; otherwise, prompt for a pipeline change first.  \n4. Show a payload preview and wait for an explicit **“move / confirm / yes”** before calling the API.  \n5. Omit null or unchanged fields.  \n6. After success, respond briefly, e.g., “Moved from Qualified to Proposal Sent.”\n\n---\n\n**Natural commands**  \n“Move the Spring Campaign deal to Proposal Sent.” · “Advance Acme deal to Contract Sent.” · “Set Q2 Opportunity to Closed Won.”\n\n---\n\n**Example payload**\n```json\n{\n  \"stageId\": \"contract_sent\"\n}\n",
        "jsCode": "const { dealId, body } = Object.fromEntries(\n  Object.entries(query).filter(([_, value]) => value != null && value !== '')\n);\n\nconst options = {\n  method: 'DELETE',\n  url: `http://35.170.240.97/api/v1/hubspot/deals/${dealId}`,\n  headers: {\n    'Authorization': 'Bearer 9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2'\n  },\n  body,\n  json: true\n};\n\nconst response = await this.helpers.httpRequest.call(this, options);\n\nreturn JSON.stringify(response);\n",
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"dealId\": {\n      \"type\": \"string\",\n      \"description\": \"Deal ID of the deal. required\"\n    },\n    \"stageId\": {\n      \"type\": \"string\",\n      \"description\": \"Stage ID of the stage. required\"\n    },\n    \"dealName\": {\n      \"type\": \"string\",\n      \"description\": \"Deal name of the deal. optional\"\n    },\n    \"stageName\": {\n      \"type\": \"string\",\n      \"description\": \"Stage name of the stage. optional\"\n    }\n  },\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        340,
        760
      ],
      "id": "d11b58fa-dadb-479c-9c92-1f5d45ccb5ae",
      "name": "Move Deal Stage"
    },
    {
      "parameters": {
        "description": "### get-pipelines\n\n---\n\n**Purpose**  \nList or search CRM pipelines.\n\n---\n\n**Optional filters**  \n`perPage` · `name`\n\n---\n\n**Rules**  \n- No filters → paginated list (`perPage` **100** when user requests “all”).  \n- AND logic; omit empty fields.  \n- Return pipelines only—**no stages**.  \n- Deduplicate and format results before display.\n\n---\n\n**Compound flow**  \nExample: get-pipelines “Sales Pipeline” → pipelineId → create-stage/update-deal.\n\n---\n\n**Natural commands**  \n“Show me all pipelines” · “Get Sales Pipeline” · “Find pipelines with onboarding”\n\n---\n\n**Example payload**\n```json\n{\n  \"perPage\": 10,\n  \"name\": \"Sales Pipeline\"\n}\n",
        "jsCode": "const qs  = Object.fromEntries(\n  Object.entries(query).filter(([_, value]) => value != null && value !== '')\n);\n\nconst options = {\n  method: 'GET',\n  url: 'http://35.170.240.97/api/v1/hubspot/pipelines',\n  qs,\n  headers: {\n    'Authorization': 'Bearer 9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2'\n  },\n  json: true\n};\n\nconst response = await this.helpers.httpRequest.call(this, options);\n\nreturn JSON.stringify(response);\n",
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"Enter the pipeline name to filter the results. This field is optional.\"\n    },\n    \"perPage\": {\n      \"type\": \"number\",\n      \"description\": \"Optional cap on number of deals returned.\"\n    }\n  },\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        640,
        760
      ],
      "id": "e9d2e4f0-3927-45f0-8237-020fe770e365",
      "name": "Get Pipelines"
    },
    {
      "parameters": {
        "description": "### get-stages\n\n---\n\n**Purpose**  \nRetrieve stages for a specific pipeline.\n\n---\n\n**Required (resolved internally)**  \n`pipelineId` — resolve via `get-pipeline`, or default to `\"default\"`; **never** include in the payload.\n\n---\n\n**Optional filter**  \n`name` — partial, case-insensitive match on the stage label.\n\n---\n\n**Rules**  \n- Always resolve `pipelineId` first.  \n- If `name` is omitted, return **all** stages in the pipeline.  \n- Apply **AND** logic when additional filters are added.  \n- Deduplicate results, sort by display order, and format clearly.  \n- Perform **fuzzy matching** on `name` (handle tense or form variations that convey the same meaning).  \n- If no stages match, reply: *“No stages found for this pipeline.”*\n\n---\n\n**Compound flow**  \nExample: `get-pipeline \"Sales Pipeline\"` → `pipelineId` → `get-stages {name:\"Demo\"}` → `stageId` → `create-deal` or `move-deal-stage`.\n\n---\n\n**Natural commands**  \n- “List stages in Sales Pipeline.”  \n- “Find the Demo stage from Onboarding.”  \n- “Show all stages in the default pipeline.”\n",
        "jsCode": "const { pipelineId }  = Object.fromEntries(\n  Object.entries(query).filter(([_, value]) => value != null && value !== '')\n);\n\nconst options = {\n  method: 'GET',\n  url: `http://35.170.240.97/api/v1/hubspot/pipelines/${pipelineId}/stages`,\n  headers: {\n    'Authorization': 'Bearer 9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2'\n  },\n  json: true\n};\n\nconst response = await this.helpers.httpRequest.call(this, options);\n\nreturn JSON.stringify(response);\n",
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"pipelineId\": {\n      \"type\": \"string\",\n      \"description\": \"Required. Provide the pipelineId of the selected pipeline. This is the unique identifier used to get the stages of the pipeline.\"\n    },\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"Enter the pipeline name to filter the results. This field is optional.\"\n    },\n    \"perPage\": {\n      \"type\": \"number\",\n      \"description\": \"Optional cap on number of deals returned.\"\n    },\n    \"stageName\": {\n      \"type\": \"string\",\n      \"description\": \"Enter the pipeline name to filter the results. This field is optional.\"\n    }\n  },\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        820,
        760
      ],
      "id": "ad22a0d5-25fb-405c-9635-7f230a09dbb3",
      "name": "Get Stages"
    },
    {
      "parameters": {
        "path": "cf3747db-05f9-404e-a965-09ac74433bab"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 1,
      "position": [
        560,
        580
      ],
      "id": "2c444e61-9f2b-4473-83f8-05c2bfd83d94",
      "name": "MCP Client - Hubspot Pipelines & Stages Node",
      "webhookId": "cf3747db-05f9-404e-a965-09ac74433bab"
    },
    {
      "parameters": {
        "description": "### create-contact\n\n---\n\n**Purpose**  \nAdd a new contact to the CRM.\n\n---\n\n**Required**  \n`firstname` · `lastname` · `email` (valid format)\n\n---\n\n**Optional**  \n`phone` (E.164) · `companyId`\n\n---\n\n**Rules**  \n1. Check duplicates with get-contacts (match on email + name).  \n   - If found, ask to skip, update, or create anyway.  \n2. If only a company name is given:  \n   - get-companies → companyId, or ask to create-company.  \n3. Show payload preview and ask for “confirm” before calling the API.  \n4. Omit empty fields; validate email and phone.\n\n---\n\n**Compound flow**  \nCan be chained with follow-up actions (e.g., create-deal once contactId is known).\n\n---\n\n**Example payload**\n```json\n{\n  \"firstname\": \"John\",\n  \"lastname\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"phone\": \"+12125551234\",\n  \"companyId\": \"123456789\"\n}\n",
        "jsCode": "const body = Object.fromEntries(\n  Object.entries(query).filter(([_, value]) => value != null && value !== '')\n);\n\nconst options = {\n  method: 'POST',\n  url: 'http://35.170.240.97/api/v1/hubspot/contacts',\n  headers: {\n    'Authorization': 'Bearer 9a8f70ec2e4e90d3c83c4dd14e7b7281b8c6217a7d48b6a7ce99cd6c1a94f8c2'\n  },\n  body,\n  json: true\n};\n\nconst response = await this.helpers.httpRequest.call(this, options);\n\nreturn JSON.stringify(response);\n",
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"firstname\": {\n      \"type\": \"string\",\n      \"description\": \"Provide the contact's first name. This is required.\"\n    },\n    \"lastname\": {\n      \"type\": \"string\",\n      \"description\": \"Provide the contact's last name. This is required.\"\n    },\n    \"email\": {\n      \"type\": \"string\",\n      \"description\": \"Provide a valid email address for the contact. This is required and must be unique in HubSpot.\"\n    },\n    \"phone\": {\n      \"type\": \"string\",\n      \"description\": \"Provide the contact's phone number in international format (e.g., +12125551234). This is optional.\"\n    },\n    \"companyId\": {\n      \"type\": \"string\",\n      \"description\": \"Provide the associated company ID for the contact. If only the company name is available, perform a lookup. This is optional.\"\n    }\n  },\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        -1540,
        860
      ],
      "id": "e6d50423-1425-497a-bc3e-72e6303ac921",
      "name": "Create Contact"
    },
    {
      "parameters": {
        "sseEndpoint": "https://gluagents.xyz/mcp/9ddf25db-1ba1-4c6c-8399-533b579f4ce7/sse"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        -800,
        320
      ],
      "id": "c42883f5-179e-4c78-a727-c1ece3a7d340",
      "name": "MCP Client - Hubspot Deals"
    },
    {
      "parameters": {
        "sseEndpoint": "https://gluagents.xyz/mcp/c27798eb-a724-4411-93a0-59c2df77d1b0/sse"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        -1000,
        320
      ],
      "id": "4d391711-bf7e-45cd-9689-e357a463ea37",
      "name": "MCP Client - Hubspot Companies"
    },
    {
      "parameters": {
        "sseEndpoint": "https://gluagents.xyz/mcp/cf3747db-05f9-404e-a965-09ac74433bab/sse"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        -600,
        320
      ],
      "id": "d9802879-c9ba-4158-890e-dde33f30fa51",
      "name": "MCP Client - Hubspot Pipelines & Stages"
    },
    {
      "parameters": {
        "sseEndpoint": "https://gluagents.xyz/mcp/2adae765-fc48-47ff-8a64-c214887d3d6a/sse"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        -1200,
        320
      ],
      "id": "25f32fda-a079-40bc-8ae2-c6970b68323b",
      "name": "MCP Client - Hubspot Contacts"
    },
    {
      "parameters": {
        "path": "1ca57807-5520-4c8e-95d1-36f08dabef07"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 1,
      "position": [
        -1060,
        120
      ],
      "id": "62371dbd-18dc-4097-b8fd-05a1db426acd",
      "name": "MCP Client - Hubspot",
      "webhookId": "1ca57807-5520-4c8e-95d1-36f08dabef07"
    }
  ],
  "pinData": {},
  "connections": {
    "MCP Client - Chat": {
      "main": [
        [
          {
            "node": "MCP Client (Testing)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Contacts": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot Contacts Node",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update Contact": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot Contacts Node",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete Contact": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot Contacts Node",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Companies": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot Companies Node",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Company": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot Companies Node",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update Company": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot Companies Node",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete Company": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot Companies Node",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Deals": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot Deals Node",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Deal": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot Deals Node",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update Deal": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot Deals Node",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete Deal": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot Deals Node",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Move Deal Stage": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot Deals Node",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Pipelines": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot Pipelines & Stages Node",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Stages": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot Pipelines & Stages Node",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Contact": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot Contacts Node",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client - Hubspot Companies": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client - Hubspot Pipelines & Stages": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client - Hubspot Contacts": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client - Hubspot Deals": {
      "ai_tool": [
        [
          {
            "node": "MCP Client - Hubspot",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8fedfb63-dbae-4f2f-8855-f83575866be2",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "8504ad3bf541c5d16e431f168070b21dcbf61af82ea7bee0c2d833e23192d019"
  },
  "id": "cPHeP3i5vO6famt3",
  "tags": []
}